{"version":3,"sources":["fair-launch.ts","candy-machine.ts","utils.ts","connection.tsx","Home.tsx","countdown.tsx","confetti.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LotteryState","FAIR_LAUNCH_PROGRAM","anchor","PublicKey","getFairLaunchState","anchorWallet","fairLaunchId","connection","a","provider","preflightCommitment","fetchIdl","idl","program","account","fairLaunch","fetch","state","getFairLaunchTicket","tokenMint","publicKey","fairLaunchTicket","bump","fairLaunchData","console","log","getBalance","treasury","lotteryData","Uint8Array","getFairLaunchLotteryBitmap","fairLaunchLotteryBitmap","getAccountInfo","fairLaunchLotteryBitmapObj","data","id","ticket","pubkey","lottery","punchTicket","getAtaForMint","buyerTokenAccount","amount","gt","currentMedian","toNumber","getSetupForTicketing","remainingAccounts","instructions","signers","rpc","adjustTicket","accounts","systemProgram","SystemProgram","programId","clock","SYSVAR_CLOCK_PUBKEY","__private","logAccounts","length","undefined","isSigner","isWritable","accountExists","createAssociatedTokenAccountInstruction","payer","tokenProgram","TOKEN_PROGRAM_ID","buyer","findProgramAddress","Buffer","from","toBuffer","anchorProgram","ticketKey","amountLamports","treasuryMint","Math","ceil","LAMPORTS_PER_SOL","priceRangeStart","transferAuthority","Keypair","generate","push","Token","createApproveInstruction","amountNumber","fees","getFairLaunchTicketSeqLookup","seq","fairLaunchTicketSeqLookup","seqBump","instruction","createTicketSeq","rent","SYSVAR_RENT_PUBKEY","receiveRefund","toBase58","purchaseTicket","CANDY_MACHINE_PROGRAM","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","associatedTokenAddress","walletAddress","splTokenMintAddress","keys","TransactionInstruction","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","getCandyMachineState","candyMachineId","candyMachine","itemsAvailable","itemsRedeemed","itemsRemaining","isSoldOut","isActive","goLiveDate","Date","getTime","wallet","config","price","getMasterEdition","mint","getMetadata","mintOneToken","userTokenAccountAddress","userPayingAccountAddress","candyMachineAddress","MintLayout","span","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","createInitMintInstruction","createMintToInstruction","metadataAddress","masterEdition","mintNft","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","sendTransactionWithRetry","ms","FAIR_LAUNCH_PROGRAM_ID","toDate","numberFormater","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","formatNumber","format","val","asNumber","toArrayLike","SequenceType","commitment","includesFeePayer","block","beforeSend","WalletNotConnectedError","transaction","Transaction","forEach","add","getRecentBlockhash","recentBlockhash","blockhash","setSigners","map","s","partialSign","signTransaction","sendSignedTransaction","signedTransaction","getUnixTs","DEFAULT_TIMEOUT","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","confirmation","Error","error","simulateResult","simulateTransaction","logs","i","line","startsWith","slice","JSON","stringify","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","toString","args","encoding","_rpcRequest","res","message","result","onSignature","context","e","Phase","useStyles","makeStyles","theme","createStyles","root","display","padding","spacing","margin","marginRight","width","height","flexDirection","alignContent","alignItems","justifyContent","background","color","borderRadius","fontSize","fontWeight","item","PhaseCountdown","date","start","end","onComplete","classes","useState","now","isFixed","renderCountdown","days","hours","minutes","seconds","completed","className","Paper","elevation","renderer","ConnectButton","styled","WalletDialogButton","MintContainer","div","MintButton","Button","dialogStyles","closeButton","position","right","top","palette","grey","ValueSlider","Slider","border","marginTop","boxShadow","lineHeight","marginLeft","Header","props","phaseName","desc","Grid","container","xs","direction","Typography","variant","isWinner","fairLaunchBalance","phaseThreeStarted","myByte","floor","positionFromRight","pow","Home","setFairLaunchBalance","yourSOLBalance","setYourSOLBalance","isMinting","setIsMinting","contributed","setContributed","useWallet","useMemo","signAllTransactions","open","severity","alertState","setAlertState","setFairLaunch","setCandyMachine","howToOpen","setHowToOpen","refundExplainerOpen","setRefundExplainerOpen","antiRugPolicyOpen","setAnitRugPolicyOpen","onMint","connected","unpunched","onPunchTicket","mintTxId","txTimeout","msg","code","window","location","reload","indexOf","useEffect","balance","getTokenAccountBalance","uiAmount","cndy","min","max","priceRangeEnd","step","tickSize","median","marks","label","filter","_","onDeposit","onRugRefund","onRefundTicket","phase","curr","phaseOne","phaseOneStart","phaseOneEnd","phaseTwoEnd","candyMachineGoLive","Phase0","Phase1","Phase2","Phase4","Phase3","Unknown","Lottery","getPhase","candyMachinePredatesFairLaunch","lt","notEnoughSOL","fee","Container","maxWidth","Link","component","align","onClick","backgroundColor","lotteryDuration","marginBottom","includes","withdrawn","paddingTop","Alert","onChange","ev","valueLabelDisplay","disabled","CircularProgress","punched","Dialog","onClose","PaperProps","antiRugSetting","selfDestructDate","reserveBp","tokenRequirement","numberOfTokens","toLocaleDateString","toLocaleTimeString","textAlign","disableTypography","IconButton","gutterBottom","toLocaleString","wrap","md","numberTicketsSold","Snackbar","autoHideDuration","ConfettiContext","React","createContext","ConfettiProvider","children","canvasRef","useRef","confettiRef","dropConfetti","current","visibility","particleCount","spread","origin","y","finally","confetti","create","resize","useWorker","Provider","ref","zIndex","left","createTheme","type","process","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","App","endpoint","clusterApiUrl","wallets","getPhantomWallet","getSolflareWallet","getSolletWallet","ThemeProvider","autoConnect","startDate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAoFYA,E,uEA1ECC,EAAsB,IAAIC,IAAYC,UACjD,gD,SAyEUH,K,kBAAAA,E,oBAAAA,E,oBAAAA,M,KAML,IAmBMI,EAAkB,uCAAG,WAChCC,EACAC,EACAC,GAHgC,uCAAAC,EAAA,6DAK1BC,EAAW,IAAIP,IAAgBK,EAAYF,EAAc,CAC7DK,oBAAqB,WANS,SASdR,IAAeS,SAASV,EAAqBQ,GAT/B,cAS1BG,EAT0B,OAW1BC,EAAU,IAAIX,IAAeU,EAAKX,EAAqBQ,GAX7B,SAYPI,EAAQC,QAAQC,WAAWC,MAAMV,GAZ1B,cAY1BW,EAZ0B,iBAcOC,EAErCD,EAAME,UACNd,EAAae,WAjBiB,2CAczBC,EAdyB,KAcPC,EAdO,yBAuBPT,EAAQC,QAAQO,iBAAiBL,MACtDK,GAxB4B,QAuB9BE,EAvB8B,0DA2B9BC,QAAQC,IAAI,aA3BkB,yBA8BTZ,EAAQJ,SAASF,WAAWmB,WAAWT,EAAMU,UA9BpC,eA8B1BA,EA9B0B,OAgC5BC,EAA0B,IAAIC,WAAW,IAhCb,UAkCxBC,EAEJb,EAAME,WApCsB,eAiC5BY,EAjC4B,OAsC9B,GAtC8B,oBA0CtBlB,EAAQJ,SAASF,WAAWyB,eAAeD,GA1CrB,QAyCxBE,EAzCwB,OA4C9BL,EAAc,IAAIC,YAAqC,OAA1BI,QAA0B,IAA1BA,OAAA,EAAAA,EAA4BC,OAAQ,IA5CnC,mDA8C9BV,QAAQC,IAAI,uCACZD,QAAQC,IAAR,MA/C8B,iCAkDzB,CACLU,GAAI7B,EACJW,QACAJ,UACAuB,OAAQ,CACNC,OAAQhB,EACRC,OACAY,KAAMX,GAERe,QAAS,CACPD,OAAQN,EACRG,KAAMN,GAERD,aA/D8B,mEAAH,0DAmElBY,EAAW,uCAAG,WACzBlC,EACAU,GAFyB,iCAAAP,EAAA,sEAKjBU,EAEJH,EAAWE,MAAME,UACjBd,EAAae,WARQ,cAInBC,EAJmB,OAUvB,GAEIe,EAASrB,EAAWqB,OAAOF,KAZR,SAejBJ,EAA2Bf,EAAWE,MAAME,WAf3B,cAcnBY,EAdmB,OAgBvB,GAhBuB,SAmBjBS,YAEJzB,EAAWE,MAAME,UACjBd,EAAae,WAtBQ,UAkBnBqB,EAlBmB,OAwBvB,KAxBuB,OA0BrBL,QA1BqB,IA0BrBA,OA1BqB,EA0BrBA,EAAQM,OAAOC,GAAG5B,EAAWE,MAAM2B,gBA1Bd,wBA2BvBpB,QAAQC,IACN,oBADF,OAEEW,QAFF,IAEEA,OAFF,EAEEA,EAAQM,OAAOG,WACf9B,EAAWE,MAAM2B,cAAcC,YA9BV,UAiCfC,EACJ/B,EAAWF,QACXE,EAAWE,MAAM2B,cAAcC,WAC/BxC,EACAU,EACAM,GAtCmB,wBAgCf0B,EAhCe,EAgCfA,kBAAmBC,EAhCJ,EAgCIA,aAAcC,EAhClB,EAgCkBA,QAhClB,UAwCjBlC,EAAWF,QAAQqC,IAAIC,aAAapC,EAAWE,MAAM2B,cAAe,CACxEQ,SAAU,CACR/B,mBACAN,WAAYA,EAAWoB,GACvBJ,0BAEAJ,SAAUZ,EAAWE,MAAMU,SAC3B0B,cAAenD,IAAYoD,cAAcC,UACzCC,MAAOtD,IAAYuD,qBAErBC,UAAW,CAAEC,aAAa,GAC1BX,aAAcA,EAAaY,OAAS,EAAIZ,OAAea,EACvDd,kBAAkB,CAChB,CACEV,OAAQhC,EAAae,UACrB0C,UAAU,EACVC,YAAY,IAJC,mBAMZhB,IAELE,YA5DqB,yBAiEjBlC,EAAWF,QAAQJ,SAASF,WAAWyB,eAC3CS,GAlEqB,eAgEnBuB,EAhEmB,OAqEnBhB,EAAgBgB,EAUlB,GATA,CACEC,YACExB,EACApC,EAAae,UACbf,EAAae,UAEbL,EAAWE,MAAME,YA5EA,UAiFnBJ,EAAWF,QAAQqC,IAAIX,YAAY,CACvCa,SAAU,CACR/B,mBACAN,WAAYA,EAAWoB,GACvBJ,0BACAmC,MAAO7D,EAAae,UACpBqB,oBAEAtB,UAAWJ,EAAWE,MAAME,UAC5BgD,aAAcC,KAEhBpB,aAAcA,EAAaY,OAAS,EAAIZ,OAAea,IA5FhC,4CAAH,wDAgGX3C,EAAmB,uCAAG,WACjCC,EACAkD,GAFiC,SAAA7D,EAAA,sEAIpBN,IAAYC,UAAUmE,mBACjC,CAACC,EAAOC,KAAK,eAAgBrD,EAAUsD,WAAYJ,EAAMI,YACzDxE,GAN+B,mFAAH,wDAUnB6B,EAA0B,uCAAG,WACxCX,GADwC,SAAAX,EAAA,sEAG3BN,IAAYC,UAAUmE,mBACjC,CAACC,EAAOC,KAAK,eAAgBrD,EAAUsD,WAAYF,EAAOC,KAAK,YAC/DvE,GALsC,mFAAH,sDASjC6C,EAAoB,uCAAG,WAC3B4B,EACAhC,EACArC,EACAU,EACA4D,GAL2B,mCAAAnE,EAAA,yDAgBtBO,EAhBsB,yCAiBlB,CACLgC,kBAAmB,GACnBC,aAAc,GACdC,QAAS,GACT2B,eAAgB,IArBO,UAwBrBxC,EAASrB,EAAWqB,OAEpBW,EAAoB,GACpBC,EAAe,GACfC,EAAU,GAEZ2B,EAAiB,EAEhB7D,EAAWE,MAAM4D,aAhCK,iBAoCvBD,EAHGxC,GAAqB,IAAXM,EAGIoC,KAAKC,KAAKrC,EAASsC,oBAFnBjE,EAAWE,MAAMiB,KAAK+C,gBAAgBpC,WAlChC,+BAuCnBqC,EAAoBhF,IAAYiF,QAAQC,WAC9CnC,EAAQoC,KAAKH,GAcblC,EAAaqC,KACXC,IAAMC,yBACJnB,IAEArD,EAAWE,MAAM4D,aACjBK,EAAkB9D,UAClBf,EAAae,UACb,GAIAoE,aAAezE,EAAWE,MAAMiB,KAAKuD,KAAK5C,aAI9CE,EAAkBsC,KAAK,CAErBhD,OAAQtB,EAAWE,MAAM4D,aACzBd,YAAY,EACZD,UAAU,IAzEa,KA2EzBf,EA3EyB,UA6EfP,YAEJzB,EAAWE,MAAM4D,aACjBxE,EAAae,WAhFM,oBAkFrB,GAlFqB,MA4EvBiB,OA5EuB,KAmFvB0B,YAAY,EACZD,UAAU,GApFa,KA2EPuB,KA3EO,gBAsFzBtC,EAAkBsC,KAAK,CACrBhD,OAAQ6C,EAAkB9D,UAC1B2C,YAAY,EACZD,UAAU,IAEZf,EAAkBsC,KAAK,CACrBhD,OAAQ+B,IACRL,YAAY,EACZD,UAAU,IA9Fa,YAkGvB1B,EAAOF,KAlGgB,kCAoGjBwD,YACJ3E,EAAWE,MAAME,UADe,UAEhCiB,EAAOF,YAFyB,aAEhC,EAAayD,KAtGQ,2CAmGlBC,EAnGkB,KAmGSC,EAnGT,eAyGPnB,EAAcjE,SAASF,WAAWyB,eAClD4D,GA1GuB,+CA6GvB5C,EA7GuB,UA8Gf0B,EAAcoB,YAAYC,gBAAgBF,EAAS,CACvDzC,SAAU,CACRwC,4BACA7E,WAAYA,EAAWoB,GACvBd,iBAAkBsD,EAClBT,MAAO7D,EAAae,UACpBiC,cAAenD,IAAYoD,cAAcC,UACzCyC,KAAM9F,IAAY+F,oBAEpBhD,QAAS,KAvHU,yBA6GVoC,KA7GU,iDA6HpB,CACLtC,oBACAC,eACAC,UACA2B,mBAjIyB,4CAAH,8DAqIbsB,EAAa,uCAAG,WAC3B7F,EACAU,GAF2B,uBAAAP,EAAA,yDAItBO,EAJsB,iEASnByB,YAAczB,EAAWE,MAAME,UAAWd,EAAae,WATpC,UAQrBqB,EARqB,OAUzB,GAEIyC,EAAoBhF,IAAYiF,QAAQC,WAExCnC,EAAU,CAACiC,GACXlC,EAAe,CACnBsC,IAAMC,yBACJnB,IACA3B,EACAyC,EAAkB9D,UAClBf,EAAae,UACb,GACA,IAIE2B,EAAoB,IAEtBhC,EAAWE,MAAM4D,aA5BM,wBA6BzB9B,EAAkBsC,KAAK,CACrBhD,OAAQtB,EAAWE,MAAM4D,aACzBd,YAAY,EACZD,UAAU,IAhCa,KAkCzBf,EAlCyB,UAoCfP,YACJzB,EAAWE,MAAM4D,aACjBxE,EAAae,WAtCM,oBAwCrB,GAxCqB,MAmCvBiB,OAnCuB,KAyCvB0B,YAAY,EACZD,UAAU,GA1Ca,KAkCPuB,KAlCO,+BA8C3B7D,QAAQC,IACN,MACAV,EAAWE,MAAMU,SAASwE,WAC1B9F,EAAae,UAAU+E,WACvB1D,EAAkB0D,YAlDO,UAoDrBpF,EAAWF,QAAQqC,IAAIgD,cAAc,CACzC9C,SAAU,CACRrC,WAAYA,EAAWoB,GACvBR,SAAUZ,EAAWE,MAAMU,SAC3B0C,MAAOhE,EAAae,UACpBqB,oBACAyC,kBAAmBA,EAAkB9D,UACrCD,UAAWJ,EAAWE,MAAME,UAC5BgD,aAAcC,IACdf,cAAenD,IAAYoD,cAAcC,UACzCC,MAAOtD,IAAYuD,qBAGrBC,UAAW,CAAEC,aAAa,GAC1BZ,oBACAC,eACAC,YApEyB,4CAAH,wDAuEbmD,EAAc,uCAAG,WAC5B1D,EACArC,EACAU,GAH4B,mCAAAP,EAAA,yDAKvBO,EALuB,wDAStBqB,EAASrB,EAAWqB,OAAOF,KATL,SAWWhB,EAErCH,EAAWE,MAAME,UACjBd,EAAae,WAda,0CAWrBC,EAXqB,KAWHC,EAXG,eAkBpBwB,EACJ/B,EAAWF,QACX6B,EACArC,EACAU,EACAM,GAvBwB,oBAiBpB0B,EAjBoB,EAiBpBA,kBAAmBC,EAjBC,EAiBDA,aAAcC,EAjBb,EAiBaA,QAAS2B,EAjBtB,EAiBsBA,gBAS9CxC,EA1BwB,kCA4BnBN,EAA2Bf,EAAWE,MAAME,WA5BzB,eA2BpBY,EA3BoB,OA4BqC,GAC/DP,QAAQC,IACN,gBACApB,EAAae,UAAU+E,WACvBvB,GAhCwB,UAkCpB7D,EAAWF,QAAQqC,IAAIC,aAAa,IAAIjD,IAAU0E,GAAiB,CACvExB,SAAU,CACR/B,mBACAN,WAAYA,EAAWoB,GACvBJ,0BAEAJ,SAAUZ,EAAWE,MAAMU,SAC3B0B,cAAenD,IAAYoD,cAAcC,UACzCC,MAAOtD,IAAYuD,qBAErBC,UAAW,CAAEC,aAAa,GAC1BZ,kBAAkB,CAChB,CACEV,OAAQhC,EAAae,UACrB0C,UAAU,EACVC,YAAY,IAJC,mBAMZhB,IAELE,UACAD,aAAcA,EAAaY,OAAS,EAAIZ,OAAea,IAtD/B,2DA4D1BrC,QAAQC,IAAI,SAAUmD,GA5DI,UA6DpB7D,EAAWF,QAAQqC,IAAIkD,eAC3B9E,EACA,IAAIpB,IAAU0E,GACd,CACExB,SAAU,CACR/B,mBACAN,WAAYA,EAAWoB,GAEvBR,SAAUZ,EAAWE,MAAMU,SAC3B0C,MAAOhE,EAAae,UACpB8C,MAAO7D,EAAae,UACpBiC,cAAenD,IAAYoD,cAAcC,UACzCyC,KAAM9F,IAAY+F,mBAClBzC,MAAOtD,IAAYuD,qBAGrBV,oBACAE,UACAD,aAAcA,EAAaY,OAAS,EAAIZ,OAAea,IA/EjC,iEAmF1BrC,QAAQC,IAAR,MAnF0B,gEAAH,4D,gPCped4E,EAAwB,IAAInG,IAAYC,UACnD,+CAGImG,EAA4B,IAAIpG,IAAYC,UAChD,+CAsBWoG,EAAqC,uCAAG,WACnDC,EACAC,EACAlG,GAHmD,iCAAAC,EAAA,4FAId,SACrCkG,EALmD,gCAO/CC,GAAO,EACPC,EAAoD,CACtDC,KAAM,EACNC,cAAe,EACfC,IAAK,MAEHC,EAAQ,EAbuC,SAcpC,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,SAAA3G,EAAA,sDACzB4G,YAAW,WACLT,IAGJA,GAAO,EACPnF,QAAQC,IAAI,4BACZ0F,EAAO,CAAEV,SAAS,OACjBA,GARsB,UASjBE,IAAQD,EATS,uBAWvB,sBAAC,4BAAAlG,EAAA,+EAEmCD,EAAW8G,qBAAqB,CAC9Db,IAHL,OAESc,EAFT,OAKGV,EAASU,GAAqBA,EAAkBC,MAAM,GACjDZ,IACEC,EAEMA,EAAOG,KAChBvF,QAAQC,IAAI,iBAAkB+E,EAAMI,GACpCD,GAAO,EACPQ,EAAOP,EAAOG,MACJH,EAAOE,eAGjBtF,QAAQC,IAAI,wBAAyB+E,EAAMI,GAC3CD,GAAO,EACPO,EAAQN,IAJRpF,QAAQC,IAAI,4BAA6B+E,EAAMI,GAN/CpF,QAAQC,IAAI,uBAAwB+E,EAAMI,IARjD,gDAsBQD,GACHnF,QAAQC,IAAI,8BAA+B+E,EAA3C,MAvBL,wDAAD,GAXuB,SAsCjBgB,EAAM,KAtCW,iEAAZ,yDAdoC,cAcnDZ,EAdmD,OAyD/CrG,EAAWkH,wBAAwBT,IACrCzG,EAAWmH,wBAAwBV,GAErCL,GAAO,EACPnF,QAAQC,IAAI,mBAAoBmF,GA7DmB,kBA8D5CA,GA9D4C,4CAAH,0DAiE/B3C,EAA0C,SAC3D0D,EACAzD,EACA0D,EACAC,GAEA,IAAMC,EAAO,CACX,CAAEzF,OAAQ6B,EAAOJ,UAAU,EAAMC,YAAY,GAC7C,CAAE1B,OAAQsF,EAAwB7D,UAAU,EAAOC,YAAY,GAC/D,CAAE1B,OAAQuF,EAAe9D,UAAU,EAAOC,YAAY,GACtD,CAAE1B,OAAQwF,EAAqB/D,UAAU,EAAOC,YAAY,GAC5D,CACE1B,OAAQnC,IAAYoD,cAAcC,UAClCO,UAAU,EACVC,YAAY,GAEd,CAAE1B,OAAQ+B,IAAkBN,UAAU,EAAOC,YAAY,GACzD,CACE1B,OAAQnC,IAAY+F,mBACpBnC,UAAU,EACVC,YAAY,IAGhB,OAAO,IAAI7D,IAAY6H,uBAAuB,CAC5CD,OACAvE,UAAWyE,IACX9F,KAAMqC,EAAOC,KAAK,OAITyD,EAAoB,uCAAG,WAClC5H,EACA6H,EACA3H,GAHkC,2BAAAC,EAAA,6DAK5BC,EAAW,IAAIP,IAAgBK,EAAYF,EAAc,CAC7DK,oBAAqB,WANW,SAShBR,IAAeS,SAAS0F,EAAuB5F,GAT/B,cAS5BG,EAT4B,OAW5BC,EAAU,IAAIX,IAAeU,EAAKyF,EAAuB5F,GAX7B,SAaTI,EAAQC,QAAQqH,aAAanH,MAAMkH,GAb1B,cAa5BjH,EAb4B,OAc5BmH,EAAiBnH,EAAMiB,KAAKkG,eAAevF,WAC3CwF,EAAgBpH,EAAMoH,cAAcxF,WACpCyF,EAAiBF,EAAiBC,EAhBN,kBAkB3B,CACLlG,GAAI+F,EACJrH,UACAI,MAAO,CACLmH,iBACAC,gBACAC,iBACAC,UAA8B,IAAnBD,EACXE,SAAUvH,EAAMiB,KAAKuG,WAAW5F,YAAa,IAAI6F,MAAOC,UAAY,IACpEF,WAAYxH,EAAMiB,KAAKuG,WACvB9G,SAAUV,EAAM2H,OAChBzH,UAAWF,EAAME,UACjB0H,OAAQ5H,EAAM4H,OACdC,MAAO7H,EAAMiB,KAAK4G,SA/BY,4CAAH,0DAoC3BC,EAAgB,uCAAG,WACvBC,GADuB,SAAAxI,EAAA,sEAIfN,IAAYC,UAAUmE,mBAC1B,CACEC,EAAOC,KAAK,YACZ8B,EAA0B7B,WAC1BuE,EAAKvE,WACLF,EAAOC,KAAK,YAEd8B,GAXmB,uCAarB,IAbqB,2CAAH,sDAgBhB2C,EAAW,uCAAG,WAClBD,GADkB,SAAAxI,EAAA,sEAIVN,IAAYC,UAAUmE,mBAC1B,CACEC,EAAOC,KAAK,YACZ8B,EAA0B7B,WAC1BuE,EAAKvE,YAEP6B,GAVc,uCAYhB,IAZgB,2CAAH,sDAeJ4C,EAAY,uCAAG,WAC1Bf,EACAjE,GAF0B,iCAAA1D,EAAA,6DAIpBwI,EAAO9I,IAAYiF,QAAQC,WAJP,SAOlB5C,YAAcwG,EAAK5H,UAAW8C,GAPZ,cAMpBiF,EANoB,OAQxB,GARwB,SAWlB3G,YAAc2F,EAAalH,MAAME,UAAW+C,GAX1B,cAUpBkF,EAVoB,OAYxB,GAEIC,EAAsBlB,EAAahG,GAEnCY,EAAoB,GACpBE,EAAiC,CAAC+F,GAjBd,KAmBxB9I,IAAYoD,cAnBY,KAoBVY,EApBU,KAqBJ8E,EAAK5H,UArBD,KAsBfkI,IAAWC,KAtBI,UAwBdpB,EAAatH,QAAQJ,SAASF,WAAWiJ,kCAC7CF,IAAWC,MAzBO,gCA2BXnF,IA3BW,MAoBtBqF,WApBsB,KAqBtBC,iBArBsB,KAsBtBC,MAtBsB,KAuBtBC,SAvBsB,KA2BtBrG,UA3BsB,gBAmBEsG,cAnBF,qBA6BxBvE,IAAMwE,0BACJ1F,IACA4E,EAAK5H,UACL,EACA8C,EACAA,GAlCsB,KAoCxBD,EACEkF,EACAjF,EACAA,EACA8E,EAAK5H,WAxCiB,MA0CxBkE,IAAMyE,wBACJ3F,IACA4E,EAAK5H,UACL+H,EACAjF,EACA,GACA,GA9BElB,EAlBoB,uBAqDtBmF,EAAalH,MAAME,YACf+D,EAAoBhF,IAAYiF,QAAQC,WAE9CnC,EAAQoC,KAAKH,GACbnC,EAAkBsC,KAAK,CACrBhD,OAAQ+G,EACRrF,YAAY,EACZD,UAAU,IAEZf,EAAkBsC,KAAK,CACrBhD,OAAQ6C,EAAkB9D,UAC1B2C,YAAY,EACZD,UAAU,IAGZd,EAAaqC,KACXC,IAAMC,yBACJnB,IACAgF,EACAlE,EAAkB9D,UAClB8C,EACA,GACAiE,EAAalH,MAAM6H,MAAMjG,cA3EL,UA+EIoG,EAAYD,EAAK5H,WA/ErB,eA+EpB4I,EA/EoB,iBAgFEjB,EAAiBC,EAAK5H,WAhFxB,eAgFpB6I,EAhFoB,aAkF1BjH,EAlF0B,UAmFlBmF,EAAatH,QAAQiF,YAAYoE,QAAQ,CAC7C9G,SAAU,CACRyF,OAAQV,EAAalH,MAAM4H,OAC3BV,aAAckB,EACdnF,QACA0E,OAAQT,EAAalH,MAAMU,SAC3BqH,KAAMA,EAAK5H,UACX+I,SAAUH,EACVC,gBACAG,cAAelG,EACfmG,gBAAiBnG,EACjBoG,qBAAsBhE,EACtBnC,aAAcC,IACdf,cAAeC,gBAAcC,UAC7ByC,KAAM9F,IAAY+F,mBAClBzC,MAAOtD,IAAYuD,qBAErBV,kBACEA,EAAkBa,OAAS,EAAIb,OAAoBc,IArG/B,kCAkFbwB,KAlFa,sCAqHhBkF,YACJpC,EAAatH,QAAQJ,SAASF,WAC9B4H,EAAatH,QAAQJ,SAASmI,OAC9B5F,EACAC,GAzHoB,wCA2HtBuD,MA3HsB,oCA6HxBhF,QAAQC,IAAR,OA7HwB,iCA+HnB,KA/HmB,2DAAH,wDAsInB+F,EAAQ,SAACgD,GACb,OAAO,IAAIvD,SAAQ,SAAAC,GAAO,OAAIE,WAAWF,EAASsD,S,oUCtUvCC,EAAyB,IAAIvK,IAAYC,UACpD,+CAGWuK,EAAS,SAACnD,GACrB,GAAKA,EAIL,OAAO,IAAImB,KAAwB,IAAnBnB,EAAM1E,aAGlB8H,EAAiB,IAAIC,KAAKC,aAAa,QAAS,CACpDC,MAAO,UACPC,sBAAuB,EACvBC,sBAAuB,IAGZC,EAAe,CAC1BC,OAAQ,SAACC,GACP,OAAKA,EAIER,EAAeO,OAAOC,GAHpB,MAKXC,SAAU,SAACD,GACT,GAAKA,EAIL,OAAOA,EAAItI,WAAamC,qBAIfgD,EACX,IAAI9H,IAAYC,UAAU,gDAEfuF,EAA4B,uCAAG,WAC1CvE,EACAwE,GAF0C,SAAAnF,EAAA,sEAI7BN,IAAYC,UAAUmE,mBACjC,CACEC,EAAOC,KAAK,eACZrD,EAAUsD,WACVkB,EAAI0F,YAAY9G,EAAQ,KAAM,IAEhCkG,GAVwC,mFAAH,wDAc5BjI,EAAa,uCAAG,WAC3BwG,EACA3E,GAF2B,SAAA7D,EAAA,sEAIdN,IAAYC,UAAUmE,mBACjC,CAACD,EAAMI,WAAYL,IAAiBK,WAAYuE,EAAKvE,YACrDuD,GANyB,mFAAH,wDAoBnB,SAAS/D,EACd0D,EACAzD,EACA0D,EACAC,GAEA,IAAMC,EAAO,CACX,CACEzF,OAAQ6B,EACRJ,UAAU,EACVC,YAAY,GAEd,CACE1B,OAAQsF,EACR7D,UAAU,EACVC,YAAY,GAEd,CACE1B,OAAQuF,EACR9D,UAAU,EACVC,YAAY,GAEd,CACE1B,OAAQwF,EACR/D,UAAU,EACVC,YAAY,GAEd,CACE1B,OAAQiB,gBAAcC,UACtBO,UAAU,EACVC,YAAY,GAEd,CACE1B,OAAQ+B,IACRN,UAAU,EACVC,YAAY,GAEd,CACE1B,OAAQ4D,qBACRnC,UAAU,EACVC,YAAY,IAGhB,OAAO,IAAIgE,yBAAuB,CAChCD,OACAvE,UAAWyE,EACX9F,KAAMqC,EAAOC,KAAK,S,+FC1EV8G,E,yDAAAA,O,2BAAAA,I,uBAAAA,I,kCAAAA,M,KAoEL,IAkKMf,EAAwB,uCAAG,WACtChK,EACAqI,EACA5F,EACAC,GAJsC,+CAAAzC,EAAA,yDAKtC+K,EALsC,+BAKb,eACzBC,EANsC,gCAOtCC,EAPsC,uBAQtCC,EARsC,uBAUjC9C,EAAOxH,UAV0B,sBAUT,IAAIuK,0BAVK,UAYlCC,EAAc,IAAIC,cACtB7I,EAAa8I,SAAQ,SAAAhG,GAAW,OAAI8F,EAAYG,IAAIjG,MAbd,KAepC2F,EAfoC,uCAepBlL,EAAWyL,mBAAmBT,GAfV,+BActCK,EAAYK,gBAd0B,KAgBpCC,UAEEV,GACF,EAAAI,GAAYO,WAAZ,oBAA0BlJ,EAAQmJ,KAAI,SAAAC,GAAC,OAAIA,EAAEjL,gBAE7C,EAAAwK,GAAYO,WAAZ,SAEEvD,EAAOxH,WAFT,mBAGK6B,EAAQmJ,KAAI,SAAAC,GAAC,OAAIA,EAAEjL,gBAItB6B,EAAQW,OAAS,IACnB,EAAAgI,GAAYU,YAAZ,oBAA2BrJ,IAExBuI,EA/BiC,kCAgChB5C,EAAO2D,gBAAgBX,GAhCP,QAgCpCA,EAhCoC,sBAmClCF,GACFA,IApCoC,UAuCTc,EAAsB,CACjDjM,aACAkM,kBAAmBb,IAzCiB,wBAuC9BpF,EAvC8B,EAuC9BA,KAAMK,EAvCwB,EAuCxBA,KAvCwB,kBA4C/B,CAAEL,OAAMK,SA5CuB,4CAAH,4DA+CxB6F,EAAY,WACvB,OAAO,IAAIhE,MAAOC,UAAY,KAG1BgE,EAAkB,KAEjB,SAAeH,EAAtB,kC,4CAAO,qDAAAhM,EAAA,6DACLiM,EADK,EACLA,kBACAlM,EAFK,EAELA,WAFK,IAGLkG,eAHK,MAGKkG,EAHL,EAYCC,EAAiBH,EAAkBI,YACnCC,EAAYJ,IACd7F,EAAO,EAdN,SAeoCtG,EAAWwM,mBAClDH,EACA,CACEI,eAAe,IAlBd,cAeCxG,EAfD,OAsBLhF,QAAQC,IAAI,oCAAqC+E,GAE7CG,GAAO,EACX,sBAAC,sBAAAnG,EAAA,yDACSmG,KAAQ+F,IAAcI,EAAYrG,GAD3C,uBAEGlG,EAAWwM,mBAAmBH,EAAgB,CAC5CI,eAAe,IAHpB,SAKSxF,EAAM,KALf,gEAAD,GAzBK,oBAkCwBjB,EACzBC,EACAC,EACAlG,EACA,UACA,GAvCC,WAkCG0M,EAlCH,8BA2CK,IAAIC,MAAM,kDA3Cf,YA6CCD,EAAalG,IA7Cd,uBA8CDvF,QAAQ2L,MAAMF,EAAalG,KACrB,IAAImG,MAAM,gDA/Cf,QAkDHrG,GAAmB,OAAZoG,QAAY,IAAZA,OAAA,EAAAA,EAAcpG,OAAQ,EAlD1B,sDAoDHrF,QAAQ2L,MAAM,uBAAd,OACI,KAAI1G,QArDL,uBAsDK,IAAIyG,MAAM,kDAtDf,eAwDCE,EAAsD,KAxDvD,oBA2DOC,EAAoB9M,EAAYkM,EAAmB,UA3D1D,QA0DDW,EA1DC,OA4DC7F,MA5DD,+DA8DC6F,IAAkBA,EAAerG,IA9DlC,qBA+DGqG,EAAeE,KA/DlB,iBAgEUC,EAAIH,EAAeE,KAAK1J,OAAS,EAhE3C,aAgE8C2J,GAAK,GAhEnD,sBAiESC,EAAOJ,EAAeE,KAAKC,IACxBE,WAAW,iBAlEvB,uBAmEW,IAAIP,MACR,uBAAyBM,EAAKE,MAAM,gBAAgB9J,SApE3D,UAgEwD2J,EAhExD,8BAyEK,IAAIL,MAAMS,KAAKC,UAAUR,EAAerG,MAzE7C,yBA6EHJ,GAAO,EA7EJ,4BAgFLnF,QAAQC,IAAI,UAAW+E,EAAMkG,IAAcI,GAhFtC,kBAiFE,CAAEtG,OAAMK,SAjFV,0E,+BAoFQwG,E,kFAAf,WACE9M,EACAqL,EACAL,GAHF,uBAAA/K,EAAA,sEAMsCD,EAAWsN,iBAE7CtN,EAAWuN,0BARf,cAMElC,EAAYK,gBANd,OAWQ8B,EAAWnC,EAAYoC,mBAEvBC,EAAkBrC,EAAYsC,WAAWH,GACzCI,EAAqBF,EAAgBG,SAAS,UAE9CC,EAAO,CAACF,EADM,CAAEG,SAAU,SAAU/C,eAf5C,UAmBoBhL,EAAWgO,YAAY,sBAAuBF,GAnBlE,aAmBQG,EAnBR,QAoBUrB,MApBV,uBAqBU,IAAID,MAAM,mCAAqCsB,EAAIrB,MAAMsB,SArBnE,iCAuBSD,EAAIE,QAvBb,6C,+BA0BenI,E,kFAAf,WACEC,EACAC,EACAlG,GAHF,mCAAAC,EAAA,6DAIE+K,EAJF,+BAI2B,SACzB7E,EALF,gCAOMC,GAAO,EACPC,EAAwC,CAC1CC,KAAM,EACNC,cAAe,EACfC,IAAK,MAEHC,EAAQ,EAbd,SAciB,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,SAAA3G,EAAA,sDACzB4G,YAAW,WACLT,IAGJA,GAAO,EACPnF,QAAQC,IAAI,4BACZ0F,EAAO,CAAEV,SAAS,OACjBA,GACH,IACEO,EAAQzG,EAAWoO,YACjBnI,GACA,SAACkI,EAAQE,GACPjI,GAAO,EACPC,EAAS,CACPG,IAAK2H,EAAO3H,IACZF,KAAM+H,EAAQ/H,KACdC,cAAe,GAEb4H,EAAO3H,KACTvF,QAAQC,IAAI,yBAA0BiN,EAAO3H,KAC7CI,EAAOP,KAEPpF,QAAQC,IAAI,yBAA0BiN,GACtCxH,EAAQN,MAGZ2E,GAEF,MAAOsD,GACPlI,GAAO,EACPnF,QAAQ2L,MAAM,oBAAqB3G,EAAMqI,GA/BlB,UAiCjBlI,IAAQD,EAjCS,uBAmCvB,sBAAC,4BAAAlG,EAAA,+EAEmCD,EAAW8G,qBAAqB,CAC9Db,IAHL,OAESc,EAFT,OAKGV,EAASU,GAAqBA,EAAkBC,MAAM,GACjDZ,IACEC,EAEMA,EAAOG,KAChBvF,QAAQC,IAAI,iBAAkB+E,EAAMI,GACpCD,GAAO,EACPQ,EAAOP,EAAOG,MACJH,EAAOE,eAGjBtF,QAAQC,IAAI,wBAAyB+E,EAAMI,GAC3CD,GAAO,EACPO,EAAQN,IAJRpF,QAAQC,IAAI,4BAA6B+E,EAAMI,GAN/CpF,QAAQC,IAAI,uBAAwB+E,EAAMI,IARjD,gDAsBQD,GACHnF,QAAQC,IAAI,8BAA+B+E,EAA3C,MAvBL,wDAAD,GAnCuB,SA8DjBgB,EAAM,KA9DW,iEAAZ,yDAdjB,cAcEZ,EAdF,OAiFMrG,EAAWkH,wBAAwBT,IACrCzG,EAAWmH,wBAAwBV,GACrCL,GAAO,EACPnF,QAAQC,IAAI,mBAAoBmF,GApFlC,kBAqFSA,GArFT,4C,wBAuFO,SAASY,EAAMgD,GACpB,OAAO,IAAIvD,SAAQ,SAAAC,GAAO,OAAIE,WAAWF,EAASsD,Q,0iBC5Z/CsE,E,uOCrHCC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,OACTC,QAASJ,EAAMK,QAAQ,GACvB,QAAS,CACPC,OAAQN,EAAMK,QAAQ,IACtBE,YAAa,EACbC,MAAOR,EAAMK,QAAQ,GACrBI,OAAQT,EAAMK,QAAQ,GACtBF,QAAS,OACTO,cAAe,SACfC,aAAc,SACdC,WAAY,SACZC,eAAgB,SAChBC,WAAY,UACZC,MAAO,QACPC,aAAc,EACdC,SAAU,KAGdvJ,KAAM,CACJyI,QAAS,OACTG,OAAQN,EAAMK,QAAQ,GACtBE,YAAa,EACbH,QAASJ,EAAMK,QAAQ,GACvBK,cAAe,SACfC,aAAc,SACdC,WAAY,SACZC,eAAgB,SAChBC,WAAY,UACZC,MAAO,QACPC,aAAc,EACdE,WAAY,OACZD,SAAU,IAEZE,KAAM,CACJD,WAAY,OACZD,SAAU,SAuBHG,EAAgD,SAAC,GAOvD,IANLC,EAMI,EANJA,KACA1J,EAKI,EALJA,OACAkE,EAII,EAJJA,MACAyF,EAGI,EAHJA,MACAC,EAEI,EAFJA,IACAC,EACI,EADJA,WAEMC,EAAU3B,IAEhB,EAA8B4B,sBAASJ,GAASC,GAAOF,IAAOC,EAAM5H,UAAYD,KAAKkI,MAAQ,GAA7F,mBAAOC,EAAP,KAEMC,GAFN,KAEwB,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,KAAMC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,QAE/C,OADAF,GAAgB,GAAPD,EADgF,EAAjCI,UAG/CvK,EAAS,sBAAMwK,UAAWV,EAAQ/J,KAAzB,SAAkCC,IAAiB,KAGjE,sBAAKwK,UAAWV,EAAQvB,KAAMrE,MAAOA,EAArC,UACG+F,GAAW,cAACQ,EAAA,EAAD,CAAOC,UAAW,EAAlB,SACV,sBAAMF,UAAWV,EAAQN,KAAzB,iBAIF,eAACiB,EAAA,EAAD,CAAOC,UAAW,EAAlB,UACE,sBAAMF,UAAWV,EAAQN,KAAzB,SACGY,EAAQ,GAAR,WAAiBA,GAAUA,IAE9B,0CAEF,eAACK,EAAA,EAAD,CAAOC,UAAW,EAAlB,UACE,sBAAMF,UAAWV,EAAQN,KAAzB,SACGa,EAAU,GAAV,WAAmBA,GAAYA,IAElC,2CAEF,eAACI,EAAA,EAAD,CAAOC,UAAW,EAAlB,UACE,sBAAMF,UAAWV,EAAQN,KAAzB,SACGc,EAAU,GAAV,WAAmBA,GAAYA,IAElC,gDAkBV,OAXIZ,GAAQC,GAASC,GACfK,GACD,IASDP,EAEA,cAAC,IAAD,CACEA,KAAMA,EACNG,WAAYA,EACZc,SAAUT,IAIP,M,0GDrFLU,EAAgBC,YAAOC,qBAAPD,CAAH,sOAWbE,EAAgBF,IAAOG,IAAV,0BAEbC,EAAaJ,YAAOK,IAAPL,CAAH,sOAWVM,EAAoB,SAAC9C,GAAD,OACxBC,YAAa,CACXC,KAAM,CACJI,OAAQ,EACRF,QAASJ,EAAMK,QAAQ,IAEzB0C,YAAa,CACXC,SAAU,WACVC,MAAOjD,EAAMK,QAAQ,GACrB6C,IAAKlD,EAAMK,QAAQ,GACnBU,MAAOf,EAAMmD,QAAQC,KAAK,SAI1BC,EAAcb,YAAOc,IAAPd,CAAe,CACjCzB,MAAO,UACPN,OAAQ,EACR,QAAS,CACPA,OAAQ,GAEV,qBAAsB,CACpB8C,OAAQ,OACR9C,OAAQ,GAEV,qBAAsB,CACpBA,OAAQ,GACRD,MAAO,GACPgD,WAAY,GACZ1C,WAAY,oDACZyC,OAAQ,yBACR,qDAAsD,CACpDE,UAAW,WAEb,WAAY,CACVtD,QAAS,SAGb,0BAA2B,CACzB,QAAS,CACPW,WAAY,qDAEd4C,WAAY,IACZzC,SAAU,GACVb,QAAS,EACTI,MAAO,GACPC,OAAQ,GACRkD,WAAY,M,SAIX9D,O,mBAAAA,I,mBAAAA,I,mBAAAA,I,qBAAAA,I,mBAAAA,I,mBAAAA,I,sBAAAA,M,KAUL,IAAM+D,EAAS,SAACC,GAMd,IAAQC,EAAkCD,EAAlCC,UAAWC,EAAuBF,EAAvBE,KAAM1C,EAAiBwC,EAAjBxC,KAAM1J,EAAWkM,EAAXlM,OAC/B,OACE,eAACqM,EAAA,EAAD,CAAMC,WAAS,EAACpD,eAAe,SAA/B,UACE,eAACmD,EAAA,EAAD,CAAME,GAAI,EAAGrD,eAAe,SAASsD,UAAU,SAA/C,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKxI,MAAO,CAAEqF,WAAY,KAA9C,SACG4C,IAEH,cAACM,EAAA,EAAD,CAAYC,QAAQ,QAAQtD,MAAM,gBAAlC,SACGgD,OAGL,cAACC,EAAA,EAAD,CAAME,GAAI,EAAGD,WAAS,EAACpD,eAAe,WAAtC,SACE,cAAC,EAAD,CACEQ,KAAM5F,YAAO4F,GACbxF,MAAO,CAAEgF,eAAgB,YACzBlJ,OAAQA,GAAU,mBA+C5B,IAMM2M,EAAW,SACfxS,EACAyS,GACa,IAAD,MACZ,GAAIA,EAAoB,EAAG,OAAO,EAClC,KACE,OAACzS,QAAD,IAACA,OAAD,EAACA,EAAYuB,QAAQJ,SACrB,OAACnB,QAAD,IAACA,OAAD,EAACA,EAAYuB,QAAQJ,KAAK0B,WAC1B,OAAC7C,QAAD,IAACA,GAAD,UAACA,EAAYqB,OAAOF,YAApB,aAAC,EAAyByD,QAC1B,OAAC5E,QAAD,IAACA,OAAD,EAACA,EAAYE,MAAMwS,mBAEnB,OAAO,EAGT,IAAMC,EACJ3S,EAAWuB,QAAQJ,KApBrB,GAsBM4C,KAAK6O,OAAM,UAAA5S,EAAWqB,OAAOF,YAAlB,eAAwByD,IAAI9C,YAAa,IAGpD+Q,EAAoB,GAAK,UAAA7S,EAAWqB,OAAOF,YAAlB,eAAwByD,IAAI9C,YAAa,EAElE0Q,EAAWG,EADJ5O,KAAK+O,IAAI,EAAGD,GAEzB,OAAOL,EAAW,GA88BLO,EA38BF,SAAChB,GAAsB,IAAD,oGACjC,GAAkDnC,mBAAiB,GAAnE,qBAAO6C,GAAP,MAA0BO,GAA1B,MACA,GAA4CpD,mBAAwB,MAApE,qBAAOqD,GAAP,MAAuBC,GAAvB,MAEA,GAAkCtD,oBAAS,GAA3C,qBAAOuD,GAAP,MAAkBC,GAAlB,MACA,GAAsCxD,mBAAS,GAA/C,qBAAOyD,GAAP,MAAoBC,GAApB,MAEMzL,GAAS0L,sBAETjU,GAAekU,mBAAQ,WAC3B,GACG3L,IACAA,GAAOxH,WACPwH,GAAO4L,qBACP5L,GAAO2D,gBAKV,MAAO,CACLnL,UAAWwH,GAAOxH,UAClBoT,oBAAqB5L,GAAO4L,oBAC5BjI,gBAAiB3D,GAAO2D,mBAEzB,CAAC3D,KAEJ,GAAoC+H,mBAAqB,CACvD8D,MAAM,EACNhG,QAAS,GACTiG,cAAU7Q,IAHZ,qBAAO8Q,GAAP,MAAmBC,GAAnB,MAMA,GAAoCjE,qBAApC,qBAAO5P,GAAP,MAAmB8T,GAAnB,MACA,GAAwClE,qBAAxC,qBAAOxI,GAAP,MAAqB2M,GAArB,MACA,GAAkCnE,oBAAS,GAA3C,qBAAOoE,GAAP,MAAkBC,GAAlB,MACA,GAAsDrE,oBAAS,GAA/D,qBAAOsE,GAAP,MAA4BC,GAA5B,MACA,GAAkDvE,oBAAS,GAA3D,qBAAOwE,GAAP,MAA0BC,GAA1B,MAEMC,GAAM,uCAAG,kCAAA7U,EAAA,kEAEX2T,IAAa,KACTvL,GAAO0M,YAAP,OAAoBnN,SAApB,IAAoBA,QAApB,EAAoBA,GAActH,UAAW+H,GAAOxH,WAH7C,sBAKG,OAAVL,SAAU,IAAVA,IAAA,UAAAA,GAAYqB,OAAOF,YAAnB,eAAyBjB,MAAMsU,aAC/BhC,EAASxS,GAAYyS,IANd,gCAQDgC,KARC,uBAWctM,YAAaf,GAAcS,GAAOxH,WAXhD,cAWHqU,EAXG,iBAaYlP,YACnBkP,EACA3C,EAAM4C,UACN5C,EAAMvS,WACN,gBACA,GAlBO,SAqBL,QAREqG,EAbG,cAqBL,IAACA,OAAD,EAACA,EAAQG,KAOX6N,GAAc,CACZH,MAAM,EACNhG,QAAS,iCACTiG,SAAU,UATZE,GAAc,CACZH,MAAM,EACNhG,QAAS,mCACTiG,SAAU,YAzBL,0DAqCPjG,EAAU,KAAMkH,KAAO,oCACtB,KAAMA,IAUU,MAAf,KAAMC,MACRnH,EAAO,YACPoH,OAAOC,SAASC,UACQ,MAAf,KAAMH,OACfnH,EAAO,sCAbJ,KAAMA,QAEA,KAAMA,QAAQuH,QAAQ,WACtB,KAAMvH,QAAQuH,QAAQ,SAC/BvH,EAAO,YACE,KAAMA,QAAQuH,QAAQ,WAC/BvH,EAAO,yDALPA,EAAU,yCAgBdmG,GAAc,CACZH,MAAM,EACNhG,UACAiG,SAAU,UA3DD,yBA8DXP,IAAa,GA9DF,6EAAH,qDAkEZ8B,qBAAU,WACR,sBAAC,kCAAAzV,EAAA,yDACMH,GADN,0EAMyByS,EAAMvS,WAAWmB,WACrCrB,GAAae,WAPlB,cAMS8U,EANT,OASGjC,GAAkBiC,GATrB,SAWuB9V,YAClBC,GACAyS,EAAMxS,aACNwS,EAAMvS,YAdX,UAWSU,EAXT,OAiBG4T,GAAc5T,GAjBjB,WAoBSA,EAAMA,MAAME,UApBrB,6BAsBe2R,EAAMvS,WAtBrB,UAwBmBiC,YACJvB,EAAMA,MAAME,UACZd,GAAae,WA1B5B,2BA4Ba,GA5Bb,eAsBgC+U,uBAtBhC,yBAqBa3C,EArBb,QA+B6BjM,OACpBwM,GAAqBP,EAAkBjM,MAAM6O,UAAY,GAhClE,2DAoCK5U,QAAQC,IAAI,6CACZD,QAAQC,IAAR,MArCL,QAuCG4S,IAEIpT,EAAMA,MAAM2B,eAAiB3B,EAAMA,MAAMiB,KAAK+C,iBAC9CpC,WAAamC,oBA1CpB,kDA6CGxD,QAAQC,IAAI,qCACZD,QAAQC,IAAR,MA9CH,YAgDKqR,EAAM5K,eAhDX,4CAkDwBD,YACjB5H,GACAyS,EAAM5K,eACN4K,EAAMvS,YArDb,QAkDW8V,EAlDX,OAuDKvB,GAAgBuB,GAvDrB,mDAyDK7U,QAAQC,IAAI,uCACZD,QAAQC,IAAR,MA1DL,gCA6DGD,QAAQC,IAAI,+CA7Df,yEAAD,KAgEC,CACDpB,GACAyS,EAAM5K,eACN4K,EAAMvS,WACNuS,EAAMxS,eAGR,IAAMgW,GAAMrL,IAAaG,SAAb,OAAsBrK,SAAtB,IAAsBA,QAAtB,EAAsBA,GAAYE,MAAMiB,KAAK+C,iBACnDsR,GAAMtL,IAAaG,SAAb,OAAsBrK,SAAtB,IAAsBA,QAAtB,EAAsBA,GAAYE,MAAMiB,KAAKsU,eACnDC,GAAOxL,IAAaG,SAAb,OAAsBrK,SAAtB,IAAsBA,QAAtB,EAAsBA,GAAYE,MAAMiB,KAAKwU,UACpDC,GAAS1L,IAAaG,SAAb,OAAsBrK,SAAtB,IAAsBA,QAAtB,EAAsBA,GAAYE,MAAM2B,eACjDgU,GAAQ,CACZ,CACErP,MAAO+O,IAAO,EACdO,MAAM,GAAD,OAAKP,GAAL,SAGP,CACE/O,MAAOoP,IAAU,EACjBE,MAAM,GAAD,OAAKF,KAOZ,CACEpP,MAAOgP,IAAO,EACdM,MAAM,GAAD,OAAKN,GAAL,UAEPO,QAAO,SAAAC,GAAC,YAAUlT,IAANkT,GAA+B,IAAZA,EAAExP,SAE7ByP,GAAS,uCAAG,sBAAAxW,EAAA,yDACXH,GADW,wDAKhBmB,QAAQC,IAAI,WACZ0S,IAAa,GANG,kBAQR/N,YAAegO,GAAa/T,GAAcU,IARlC,OASdoT,IAAa,GACbS,GAAc,CACZH,MAAM,EACNhG,QAAQ,wBAAD,QACK,OAAV1N,SAAU,IAAVA,QAAA,EAAAA,GAAYqB,OAAOF,MAAO,UAAY,WADjC,KAGPwS,SAAU,YAfE,kDAkBdlT,QAAQC,IAAR,MACA0S,IAAa,GACbS,GAAc,CACZH,MAAM,EACNhG,QAAS,wBACTiG,SAAU,UAvBE,0DAAH,qDA2BTuC,GAAW,uCAAG,sBAAAzW,EAAA,yDACbH,GADa,wDAKlBmB,QAAQC,IAAI,UALM,SAOhB0S,IAAa,GAPG,SAQVjO,YAAc7F,GAAcU,IARlB,OAShBoT,IAAa,GACbS,GAAc,CACZH,MAAM,EACNhG,QACE,+EACFiG,SAAU,YAdI,kDAiBhBlT,QAAQC,IAAR,MACA0S,IAAa,GACbS,GAAc,CACZH,MAAM,EACNhG,QAAS,wBACTiG,SAAU,UAtBI,0DAAH,qDA0BXwC,GAAc,uCAAG,sBAAA1W,EAAA,yDAChBH,GADgB,wDAKrBmB,QAAQC,IAAI,UALS,SAOnB0S,IAAa,GAPM,SAQb/N,YAAe,EAAG/F,GAAcU,IARnB,OASnBoT,IAAa,GACbS,GAAc,CACZH,MAAM,EACNhG,QACE,oEACFiG,SAAU,YAdO,kDAiBnBlT,QAAQC,IAAR,MACA0S,IAAa,GACbS,GAAc,CACZH,MAAM,EACNhG,QAAS,wBACTiG,SAAU,UAtBO,0DAAH,qDA2Bdc,GAAa,uCAAG,sBAAAhV,EAAA,yDACfH,IAAiBU,IAAeA,GAAWqB,OAD5B,wDAKpBZ,QAAQC,IAAI,SACZ0S,IAAa,GANO,kBAQZ5R,YAAYlC,GAAcU,IARd,OASlBoT,IAAa,GACbS,GAAc,CACZH,MAAM,EACNhG,QAAS,mCACTiG,SAAU,YAbM,kDAgBlBlT,QAAQC,IAAR,MACA0S,IAAa,GACbS,GAAc,CACZH,MAAM,EACNhG,QAAS,wBACTiG,SAAU,UArBM,0DAAH,qDA0BbyC,GA3XR,SACEpW,EACAoH,GACQ,IAAD,QACDiP,GAAO,IAAI1O,MAAOC,UAElB0O,EAAQ,UAAG3M,YAAM,OAAC3J,QAAD,IAACA,OAAD,EAACA,EAAYE,MAAMiB,KAAKoV,sBAAjC,aAAG,EAA8C3O,UACzD4O,EAAW,UAAG7M,YAAM,OAAC3J,QAAD,IAACA,OAAD,EAACA,EAAYE,MAAMiB,KAAKqV,oBAAjC,aAAG,EAA4C5O,UAC1D6O,EAAW,UAAG9M,YAAM,OAAC3J,QAAD,IAACA,OAAD,EAACA,EAAYE,MAAMiB,KAAKsV,oBAAjC,aAAG,EAA4C7O,UAC1D8O,EAAkB,UAAG/M,YAAM,OAACvC,QAAD,IAACA,OAAD,EAACA,EAAclH,MAAMwH,mBAA9B,aAAG,EAAwCE,UAEnE,OAAI0O,GAAYD,EAAOC,EACdvI,EAAM4I,OACJH,GAAeH,GAAQG,EACzBzI,EAAM6I,OACJH,GAAeJ,GAAQI,EACzB1I,EAAM8I,QACJ,OAAC7W,QAAD,IAACA,OAAD,EAACA,EAAYE,MAAMwS,oBAGlB,OAAV1S,QAAU,IAAVA,OAAA,EAAAA,EAAYE,MAAMwS,oBAClBgE,GACAL,EAAOK,EAEA3I,EAAM+I,QACR,OAAI9W,QAAJ,IAAIA,OAAJ,EAAIA,EAAYE,MAAMwS,mBACpB3E,EAAMgJ,OAGRhJ,EAAMiJ,QAXJjJ,EAAMkJ,QAyWDC,CAASlX,GAAYoH,IAE7B+P,IACQ,OAAZ/P,SAAY,IAAZA,QAAA,EAAAA,GAAclH,MAAMwH,cAApB,OACA1H,SADA,IACAA,QADA,EACAA,GAAYE,MAAMiB,KAAKsV,eADvB,OAEArP,SAFA,IAEAA,QAFA,EAEAA,GAAclH,MAAMwH,WAAW0P,GAA/B,OAAkCpX,SAAlC,IAAkCA,QAAlC,EAAkCA,GAAYE,MAAMiB,KAAKsV,cAErDY,MACc,MAAlBpE,KAAA,OACAjT,SADA,IACAA,QADA,EACAA,GAAYE,MAAMiB,KAAK+C,mBADvB,OAEAlE,SAFA,IAEAA,QAFA,EAEAA,GAAYE,MAAMiB,KAAKmW,MACvBrE,KAA4B,OAAVjT,SAAU,IAAVA,IAAA,UAAAA,GAAYqB,cAAZ,mBAAoBF,YAApB,eAA0BQ,OAAOG,aAAc,GAC/DuR,GAAcpP,oBAAd,OACEjE,SADF,IACEA,QADF,EACEA,GAAYE,MAAMiB,KAAKmW,IAAIxV,YAC3B,KAGN,OACE,eAACyV,EAAA,EAAD,CAAWxN,MAAO,CAAE2H,UAAW,KAA/B,UACE,cAAC6F,EAAA,EAAD,CAAWC,SAAS,KAAKzN,MAAO,CAAEmH,SAAU,YAA5C,SACE,qBACEnH,MAAO,CACLsE,QAAS,OACTO,cAAe,MACfG,eAAgB,YAJpB,SAOE,cAAC0I,EAAA,EAAD,CACEC,UAAU,SACVnF,QAAQ,QACRtD,MAAM,gBACN0I,MAAM,QACNC,QAAS,WACPvD,IAAqB,IANzB,iCAaJ,cAACkD,EAAA,EAAD,CAAWC,SAAS,KAAKzN,MAAO,CAAEmH,SAAU,YAA5C,SACE,cAACZ,EAAA,EAAD,CACEvG,MAAO,CAAEuE,QAAS,GAAIuJ,gBAAiB,UAAW3I,aAAc,GADlE,SAGE,eAACgD,EAAA,EAAD,CAAMC,WAAS,EAACpD,eAAe,SAASsD,UAAU,SAAlD,UACG+D,KAAUrI,EAAM4I,QACf,cAAC,EAAD,CACE3E,UAAW,UACXC,KAAM,qBACN1C,KAAI,OAAEvP,SAAF,IAAEA,QAAF,EAAEA,GAAYE,MAAMiB,KAAKoV,gBAGhCH,KAAUrI,EAAM6I,QACf,cAAC,EAAD,CACE5E,UAAW,UACXC,KAAM,kBACN1C,KAAI,OAAEvP,SAAF,IAAEA,QAAF,EAAEA,GAAYE,MAAMiB,KAAKqV,cAIhCJ,KAAUrI,EAAM8I,QACf,cAAC,EAAD,CACE7E,UAAW,UACXC,KAAM,eACN1C,KAAI,OAAEvP,SAAF,IAAEA,QAAF,EAAEA,GAAYE,MAAMiB,KAAKsV,cAIhCL,KAAUrI,EAAMkJ,SACf,cAAC,EAAD,CACEjF,UAAW,UACXC,KAAM,qBACN1C,KAAI,OAAEvP,SAAF,IAAEA,QAAF,EAAEA,GAAYE,MAAMiB,KAAKsV,YAAYzL,IAAnC,OACJhL,SADI,IACJA,QADI,EACJA,GAAYE,MAAMiB,KAAK2W,mBAK5B1B,KAAUrI,EAAMgJ,SAAW3P,IAC1B,cAAC,EAAD,CACE4K,UAAW,UACXC,KAAM,mBACN1C,KAAI,OAAEvP,SAAF,IAAEA,QAAF,EAAEA,GAAYE,MAAMiB,KAAKsV,cAIhCL,KAAUrI,EAAMgJ,QAAU3P,IACzB,cAAC,EAAD,CACE4K,UAAW,UACXC,KAAM,uBACN1C,KAAI,OAAEnI,SAAF,IAAEA,QAAF,EAAEA,GAAclH,MAAMwH,aAI7B0O,KAAUrI,EAAM+I,QACf,cAAC,EAAD,CACE9E,UACEmF,GAAiC,UAAY,UAE/ClF,KAAM,oDACN1C,KAAI,OAAEnI,SAAF,IAAEA,QAAF,EAAEA,GAAclH,MAAMwH,WAC1B7B,OAAO,SAIV7F,IACC,cAACkS,EAAA,EAAD,CACEC,WAAS,EACTE,UAAU,SACVtD,eAAe,SACfD,WAAW,SACX/E,MAAO,CACL4E,OAAQ,IACR+C,UAAW,GACXqG,aAAc,GACd/I,WAAY,UACZE,aAAc,GAVlB,SAaGlP,GAAWqB,OAAOF,KACjB,qCACE,cAACmR,EAAA,EAAD,uBACA,eAACA,EAAA,EAAD,CAAYC,QAAQ,KAAKxI,MAAO,CAAEqF,WAAY,KAA9C,UACGlF,IAAaC,SACD,OAAVnK,SAAU,IAAVA,IAAA,UAAAA,GAAYqB,OAAOF,YAAnB,eAAyBQ,OAAOG,aAAc,GAC7CmC,oBACD,IAJL,YAQA,CAAC8J,EAAM4I,OAAQ5I,EAAM6I,QAAQoB,SAAS5B,IACxC,eAAC9D,EAAA,EAAD,mDACuC,wBAC1B,OAAVtS,SAAU,IAAVA,IAAA,UAAAA,GAAYE,aAAZ,mBAAmBiB,YAAnB,eAAyBmW,MACxB,+BACE,qEACkC,KACrB,OAAVtX,SAAU,IAAVA,IAAA,UAAAA,GAAYE,aAAZ,mBAAmBiB,YAAnB,eAAyBmW,IAAIxV,YAC5BmC,mBAAkB,IAHtB,eAUN,cAACqO,EAAA,EAAD,uDAOLtS,IACC,qCACG,CACC+N,EAAM6I,OACN7I,EAAM8I,OACN9I,EAAMgJ,OACNhJ,EAAMkJ,SACNe,SAAS5B,MALV,OAMCpW,SAND,IAMCA,IAND,UAMCA,GAAYqB,cANb,iBAMC,EAAoBF,YANrB,aAMC,EAA0BjB,MAAM+X,YAC9B,qBAAKlO,MAAO,CAAEmO,WAAY,QAA1B,SACE,cAACC,EAAA,EAAD,CAAOxE,SAAS,QAAhB,6EAML,CAAC5F,EAAM6I,OAAQ7I,EAAM8I,QAAQmB,SAAS5B,KACrCpW,GAAWE,MAAM2B,gBADlB,OAEC7B,SAFD,IAECA,IAFD,UAECA,GAAYqB,cAFb,iBAEC,EAAoBF,YAFrB,aAEC,EAA0BQ,WAC1B,OAAC3B,SAAD,IAACA,IAAD,UAACA,GAAYqB,cAAb,iBAAC,EAAoBF,YAArB,aAAC,EAA0BjB,MAAM+X,YACjCjY,GAAWE,MAAM2B,cAAcD,GAA/B,OACE5B,SADF,IACEA,IADF,UACEA,GAAYqB,cADd,iBACE,EAAoBF,YADtB,aACE,EAA0BQ,SAE1B,qBAAKoI,MAAO,CAAEmO,WAAY,QAA1B,SACE,cAACC,EAAA,EAAD,CAAOxE,SAAS,UAAhB,+FAML,CAAC5F,EAAMgJ,OAAQhJ,EAAMkJ,SAASe,SAAS5B,KACtCpW,GAAWE,MAAM2B,gBADlB,OAEC7B,SAFD,IAECA,IAFD,UAECA,GAAYqB,cAFb,iBAEC,EAAoBF,YAFrB,aAEC,EAA0BQ,WAC1B,OAAC3B,SAAD,IAACA,IAAD,UAACA,GAAYqB,cAAb,iBAAC,EAAoBF,YAArB,aAAC,EAA0BjB,MAAM+X,YACjCjY,GAAWE,MAAM2B,cAAcD,GAA/B,OACE5B,SADF,IACEA,IADF,UACEA,GAAYqB,cADd,kBACE,EAAoBF,YADtB,cACE,GAA0BQ,SAE1B,qBAAKoI,MAAO,CAAEmO,WAAY,QAA1B,SACE,eAACC,EAAA,EAAD,CAAOxE,SAAS,QAAhB,6FAE4B,0CAF5B,iIAQL0D,IACC,cAACc,EAAA,EAAD,CAAOxE,SAAS,QAAhB,8EAQL,CAAC5F,EAAM6I,OAAQ7I,EAAM8I,QAAQmB,SAAS5B,KACrC,mCACE,cAAClE,EAAA,EAAD,CAAMnI,MAAO,CAAE2H,UAAW,GAAIqG,aAAc,IAA5C,SACE,cAACxG,EAAD,CACEgE,IAAKA,GACLM,MAAOA,GACPL,IAAKA,GACLE,KAAMA,GACNlP,MAAO6M,GACP+E,SAAU,SAACC,EAAIjO,GAAL,OAAakJ,GAAelJ,IACtCkO,kBAAkB,OAClBvO,MAAO,CACL2E,MAAO,oBACPmD,WAAY,GACZlD,OAAQ,UAOhB9G,GAAO0M,UAMP,gCACG,CAACxG,EAAM6I,OAAQ7I,EAAM8I,QAAQmB,SAAS5B,KACrC,mCACE,cAACtF,EAAD,CACE8G,QAAS3B,GACT1D,QAAQ,YACRgG,SACEpF,MACC,OAACnT,SAAD,IAACA,QAAD,EAACA,GAAYqB,OAAOF,OAAQiV,KAAUrI,EAAM8I,QAC7CQ,GANJ,SASGlE,GACC,cAACqF,EAAA,EAAD,KACE,OAACxY,SAAD,IAACA,QAAD,EAACA,GAAYqB,OAAOF,MAGtB,aAFA,gBASP,CAAC4M,EAAMgJ,QAAQiB,SAAS5B,KACvB,qCACG5D,EAASxS,GAAYyS,KACpB,cAAC3B,EAAD,CACE8G,QAASnD,GACTlC,QAAQ,YACRgG,cAC6CzV,KAAjC,OAAV9C,SAAU,IAAVA,IAAA,WAAAA,GAAYqB,OAAOF,YAAnB,iBAAyBjB,MAAMuY,SAJnC,SAOGtF,GAAY,cAACqF,EAAA,EAAD,IAAuB,kBAItChG,EAASxS,GAAYyS,KACrB,cAAC3B,EAAD,CACE8G,QAASzB,GACT5D,QAAQ,YACRgG,SACEpF,SAC4BrQ,KAAlB,OAAV9C,SAAU,IAAVA,QAAA,EAAAA,GAAYqB,OAAOF,YAC0B2B,KAAnC,OAAV9C,SAAU,IAAVA,IAAA,WAAAA,GAAYqB,OAAOF,YAAnB,iBAAyBjB,MAAM+X,WANnC,SASG9E,GAAY,cAACqF,EAAA,EAAD,IAAuB,gBAM3CpC,KAAUrI,EAAM+I,QACf,uCACK9W,IACDwS,EAASxS,GAAYyS,MACrB,cAAC7B,EAAD,UACE,cAACE,EAAD,CACEyH,UACc,OAAZnR,SAAY,IAAZA,QAAA,EAAAA,GAAclH,MAAMsH,YACpB2L,MACA,OAAC/L,SAAD,IAACA,QAAD,EAACA,GAAclH,MAAMuH,YACV,OAAVzH,SAAU,IAAVA,IAAA,WAAAA,GAAYqB,cAAZ,sBAAoBF,YAApB,iBAA0BjB,MAAMuY,UACT,IAAtBhG,GAEJmF,QAAStD,GACT/B,QAAQ,YATV,UAWa,OAAVvS,SAAU,IAAVA,IAAA,WAAAA,GAAYqB,cAAZ,sBAAoBF,YAApB,iBAA0BjB,MAAMuY,UACX,IAAtBhG,GACE,UACc,OAAZrL,SAAY,IAAZA,QAAA,EAAAA,GAAclH,MAAMsH,WACtB,WACE2L,GACF,cAACqF,EAAA,EAAD,IAEA,YAMNhG,EAASxS,GAAYyS,KACrB,cAAC3B,EAAD,CACE8G,QAASzB,GACT5D,QAAQ,YACRgG,SACEpF,SAC4BrQ,KAAlB,OAAV9C,SAAU,IAAVA,QAAA,EAAAA,GAAYqB,OAAOF,YAC0B2B,KAAnC,OAAV9C,SAAU,IAAVA,IAAA,WAAAA,GAAYqB,OAAOF,YAAnB,iBAAyBjB,MAAM+X,WANnC,SASG9E,GAAY,cAACqF,EAAA,EAAD,IAAuB,mBAnG9C,eAAC/H,EAAD,qBACU,IACP,CAAC1C,EAAM6I,QAAQoB,SAAS5B,IAAS,SAAW,mBAyGjD,eAAClE,EAAA,EAAD,CACEC,WAAS,EACTpD,eAAe,gBACfE,MAAM,gBAHR,UAKE,cAACwI,EAAA,EAAD,CACEC,UAAU,SACVnF,QAAQ,QACRtD,MAAM,gBACN0I,MAAM,OACNC,QAAS,WACP3D,IAAa,IANjB,oCAWW,OAAVjU,SAAU,IAAVA,QAAA,EAAAA,GAAYqB,OAAOF,OAClB,cAACsW,EAAA,EAAD,CACEC,UAAU,SACVnF,QAAQ,QACRtD,MAAM,gBACN0I,MAAM,QACNC,QAAS,YAEJ5X,IACDoW,KAAUrI,EAAMkJ,SAChBzE,EAASxS,GAAYyS,IAErB0B,IAAuB,GAEvBgC,MAbN,+BAqBJ,cAACuC,EAAA,EAAD,CACEhF,KAAMQ,GACNyE,QAAS,kBAAMxE,IAAuB,IACtCyE,WAAY,CACV7O,MAAO,CAAE8N,gBAAiB,UAAW3I,aAAc,IAJvD,SAOE,cAAC,IAAD,CAAkBnF,MAAO,CAAEuE,QAAS,IAApC,0KAMF,cAACoK,EAAA,EAAD,CACEhF,KAAMU,GACNuE,QAAS,WACPtE,IAAqB,IAEvBuE,WAAY,CACV7O,MAAO,CAAE8N,gBAAiB,UAAW3I,aAAc,IANvD,SASE,eAAC,IAAD,CAAkBnF,MAAO,CAAEuE,QAAS,IAApC,YACG,OAACtO,SAAD,IAACA,QAAD,EAACA,GAAYE,MAAMiB,KAAK0X,iBACvB,+EAES,OAAV7Y,SAAU,IAAVA,QAAA,EAAAA,GAAYE,MAAMiB,KAAK0X,iBACtB7Y,GAAWE,MAAMiB,KAAK0X,eAAeC,kBACnC,gCACE,iDACA,qIAIA,8CANF,2BAO2B,IACxB9Y,GAAWE,MAAMiB,KAAK0X,eAAeE,UAAY,IARpD,YAQ6D,KAC/C,OAAV/Y,SAAU,IAAVA,QAAA,EAAAA,GAAYY,UACZZ,GAAWE,MAAMiB,KAAK0X,eAAeE,WACjB,IAAnB9U,oBAXL,0DAY0D,IACvDjE,GAAWE,MAAMiB,KAAK0X,eAAeG,iBAAiBlX,WAAY,IAbrE,qBAcqB,IAClB9B,GAAWE,MAAMiB,KAAK8X,eAAenX,WAfxC,sBAiBE,6CACe,IACZ9B,GAAWE,MAAMiB,KAAK0X,eAAeG,iBAAiBlX,WAAY,IAFrE,oBAGoB,IAHpB,WAIG6H,YACC3J,GAAWE,MAAMiB,KAAK0X,eAAeC,yBALzC,cAIG,GAEEI,qBAAsB,IAN3B,KAOK,IAPL,WAQGvP,YACC3J,GAAWE,MAAMiB,KAAK0X,eAAeC,yBATzC,cAQG,GAEEK,qBAVL,gDAWgD,IAC7CnZ,GAAWE,MAAMiB,KAAK0X,eAAeE,UAAY,IAZpD,mCAeW,OAAV/Y,SAAU,IAAVA,IAAA,WAAAA,GAAYqB,cAAZ,iBAAoBF,SACnB,OAACnB,SAAD,IAACA,IAAD,WAACA,GAAYqB,cAAb,cAAC,GAAoBF,KAAKjB,MAAM+X,YAC9B,cAACnH,EAAD,CACE8G,QAAS1B,GACT3D,QAAQ,YACRgG,UACKvY,GAAWqB,OAAOF,OACpBnB,GAAWqB,OAAOF,KAAKjB,MAAMuY,SAC9B9Q,KAAKkI,MAAQ,IACX7P,GAAWE,MAAMiB,KAAK0X,eAAeC,iBAAiBhX,WAP5D,SAUGqR,GACC,cAACqF,EAAA,EAAD,IACE7Q,KAAKkI,MAAQ,IACf7P,GAAWE,MAAMiB,KAAK0X,eAAeC,iBAAiBhX,WACtD,gDAEE,cAAC,IAAD,CACEyN,KAAM5F,YACJ3J,GAAWE,MAAMiB,KAAK0X,eACnBC,uBAKT,WAKR,qBAAK/O,MAAO,CAAEqP,UAAW,SAAU1H,UAAW,QAA9C,UACa,OAAV1R,SAAU,IAAVA,IAAA,WAAAA,GAAYqB,cAAZ,iBAAoBF,SACnB,OAACnB,SAAD,IAACA,IAAD,WAACA,GAAYqB,cAAb,mBAAC,GAAoBF,YAArB,cAAC,GAA0BjB,MAAMuY,UAC/B,kIAUhB,eAACC,EAAA,EAAD,CACEhF,KAAMM,GACN2E,QAAS,kBAAM1E,IAAa,IAC5B2E,WAAY,CACV7O,MAAO,CAAE8N,gBAAiB,UAAW3I,aAAc,IAJvD,UAOE,eAAC,IAAD,CACEmK,mBAAiB,EACjBtP,MAAO,CACLsE,QAAS,OACTS,WAAY,SACZC,eAAgB,iBALpB,UAQE,cAAC0I,EAAA,EAAD,CACEC,UAAU,SACVnF,QAAQ,KACRtD,MAAM,gBACN2I,QAAS,WACP3D,IAAa,IALjB,0BAUA,cAACqF,EAAA,EAAD,CACE,aAAW,QACXjJ,UAAWW,EAAaC,YACxB2G,QAAS,kBAAM3D,IAAa,IAH9B,SAKE,cAAC,IAAD,SAGJ,eAAC,IAAD,WACE,cAAC3B,EAAA,EAAD,CAAYC,QAAQ,KAApB,2CAGA,eAACD,EAAA,EAAD,CAAYiH,cAAY,EAACtK,MAAM,gBAA/B,mIAE0D,KAC7C,OAAVjP,SAAU,IAAVA,IAAA,WAAAA,GAAYE,aAAZ,sBAAmBiB,YAAnB,iBAAyBmW,MACxB,+BACE,6DAC0B,KACb,OAAVtX,SAAU,IAAVA,IAAA,WAAAA,GAAYE,aAAZ,sBAAmBiB,YAAnB,iBAAyBmW,IAAIxV,YAC5BmC,mBAAkB,IAHtB,eASN,cAACqO,EAAA,EAAD,CAAYC,QAAQ,KAApB,qCACA,cAACD,EAAA,EAAD,CAAYiH,cAAY,EAACtK,MAAM,gBAA/B,wVAQCkI,GACC,qCACE,cAAC7E,EAAA,EAAD,CAAYC,QAAQ,KAApB,0CAGA,cAACD,EAAA,EAAD,CAAYiH,cAAY,EAACtK,MAAM,gBAA/B,uMAQF,qCACE,cAACqD,EAAA,EAAD,CAAYC,QAAQ,KAApB,oCACA,cAACD,EAAA,EAAD,CAAYiH,cAAY,EAACtK,MAAM,gBAA/B,gQAOA,cAACqD,EAAA,EAAD,CAAYC,QAAQ,KAApB,0CAGA,eAACD,EAAA,EAAD,CAAYiH,cAAY,EAACtK,MAAM,gBAA/B,eACK,KACU,OAAZ7H,SAAY,IAAZA,QAAA,EAAAA,GAAclH,MAAMwH,YAApB,WACGiC,YAAM,OACJvC,SADI,IACJA,QADI,EACJA,GAAclH,MAAMwH,mBAFzB,cACG,GAEG8R,iBACH,mBANN,wJA6BbxZ,IACC,cAACuX,EAAA,EAAD,CACEC,SAAS,KACTzN,MAAO,CAAEmH,SAAU,WAAYQ,UAAW,IAF5C,SAIE,qBAAK3H,MAAO,CAAEyE,OAAQ,IAAtB,SACE,eAAC0D,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,MAAMoH,KAAK,SAArC,UACE,eAACvH,EAAA,EAAD,CAAMC,WAAS,EAACuH,GAAI,EAAGrH,UAAU,SAAjC,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQtD,MAAM,gBAAlC,kBAGA,cAACqD,EAAA,EAAD,CACEC,QAAQ,KACRtD,MAAM,cACNlF,MAAO,CAAEqF,WAAY,QAHvB,UAKa,OAAVpP,SAAU,IAAVA,QAAA,EAAAA,GAAYE,MAAMyZ,kBAAkB7X,aAAc,OAGvD,eAACoQ,EAAA,EAAD,CAAMC,WAAS,EAACuH,GAAI,EAAGrH,UAAU,SAAjC,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQtD,MAAM,gBAAlC,wBAGA,eAACqD,EAAA,EAAD,CACEC,QAAQ,KACRtD,MAAM,cACNlF,MAAO,CAAEqF,WAAY,QAHvB,oBAKKlF,IAAaC,OAAOyL,UAG3B,eAAC1D,EAAA,EAAD,CAAMC,WAAS,EAACuH,GAAI,EAAGrH,UAAU,SAAjC,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQtD,MAAM,gBAAlC,0BAGA,eAACqD,EAAA,EAAD,CACEC,QAAQ,KACRtD,MAAM,cACNlF,MAAO,CAAEqF,WAAY,QAHvB,mBAKI,IACDlF,IAAaC,SACD,OAAVnK,SAAU,IAAVA,QAAA,EAAAA,GAAYY,WAAY,GAAKqD,iCAQ5C,cAAC2V,EAAA,EAAD,CACElG,KAAME,GAAWF,KACjBmG,iBAAkB,IAClBlB,QAAS,kBAAM9E,GAAc,2BAAKD,IAAN,IAAkBF,MAAM,MAHtD,SAKE,cAACyE,EAAA,EAAD,CACEQ,QAAS,kBAAM9E,GAAc,2BAAKD,IAAN,IAAkBF,MAAM,MACpDC,SAAUC,GAAWD,SAFvB,SAIGC,GAAWlG,gB,iDE/pChBoM,GAAkBC,IAAMC,cAA2C,MAE5DC,GAAmB,SAAC,GAAgC,IAAD,IAA7BC,gBAA6B,MAAlB,KAAkB,EACxDC,EAAYC,mBACZC,EAAcD,mBAEdE,EAAe9G,mBACnB,kBAAM,WAC2C,IAAD,EAA1C6G,EAAYE,SAAWJ,EAAUI,UACnCJ,EAAUI,QAAQxQ,MAAMyQ,WAAa,UACrC,UAAAH,EACGE,QAAQ,CACPE,cAAe,IACfC,OAAQ,IACRC,OAAQ,CAAEC,EAAG,aAJjB,SAMIC,SAAQ,WACJV,EAAUI,UACZJ,EAAUI,QAAQxQ,MAAMyQ,WAAa,iBAK/C,IAGFtF,qBAAU,WACJiF,EAAUI,UAAYF,EAAYE,UACpCJ,EAAUI,QAAQxQ,MAAMyQ,WAAa,SACrCH,EAAYE,QAAUO,KAASC,OAAOZ,EAAUI,QAAS,CACvDS,QAAQ,EACRC,WAAW,OAGd,IAWH,OACE,eAACnB,GAAgBoB,SAAjB,CAA0B1U,MAAO,CAAE8T,gBAAnC,UACE,wBAAQa,IAAKhB,EAAkBpQ,MAXM,CACvC2E,MAAO,QACPC,OAAQ,QACRuC,SAAU,WACVkK,OAAQ,EACRhK,IAAK,EACLiK,KAAM,KAMHnB,MChCDhM,GAAQoN,aAAY,CACxBjK,QAAS,CACPkK,KAAM,UAIJpU,GACF,IAAIhI,KAAYC,UAAUoc,gDAGxBjc,GAAe,IAAIJ,KAAYC,UACnCoc,gDAMIhc,GAAa,IAAIL,KAAYsc,WADnBD,iCAGVE,GAAgBC,SAASH,wXAAYI,2BAA6B,IAiCzDC,GA7BH,WACV,IAAMC,EAAWtI,mBAAQ,kBAAMuI,wBAVjBP,YAUyC,IAEjDQ,EAAUxI,mBACd,iBAAM,CAACyI,8BAAoBC,+BAAqBC,gCAChD,IAGF,OACE,cAACC,GAAA,EAAD,CAAelO,MAAOA,GAAtB,SACE,cAAC,qBAAD,CAAoB4N,SAAUA,EAA9B,SACE,cAAC,iBAAD,CAAgBE,QAASA,EAASK,aAAW,EAA7C,SACE,cAAC,uBAAD,UACE,cAAC,GAAD,UACE,cAAC,EAAD,CACElV,eAAgBA,GAChB5H,aAAcA,GACdC,WAAYA,GACZ8c,UAAWZ,GACX/G,UArBE,iBC9BH4H,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.ddce676a.chunk.js","sourcesContent":["import * as anchor from '@project-serum/anchor';\r\n\r\nimport { TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\r\nimport { LAMPORTS_PER_SOL, TransactionInstruction } from '@solana/web3.js';\r\nimport {\r\n  createAssociatedTokenAccountInstruction,\r\n  getAtaForMint,\r\n  getFairLaunchTicketSeqLookup,\r\n} from './utils';\r\n\r\nexport const FAIR_LAUNCH_PROGRAM = new anchor.web3.PublicKey(\r\n  'faircnAB9k59Y4TXmLabBULeuTLgV7TkGMGNkjnA15j',\r\n);\r\n\r\nexport interface FairLaunchAccount {\r\n  id: anchor.web3.PublicKey;\r\n  program: anchor.Program;\r\n  state: FairLaunchState;\r\n\r\n  ticket: {\r\n    pubkey: anchor.web3.PublicKey;\r\n    bump: number;\r\n    data?: FairLaunchTicket;\r\n  };\r\n  lottery: {\r\n    pubkey: anchor.web3.PublicKey;\r\n    data?: Uint8Array;\r\n  };\r\n  treasury: number;\r\n}\r\n\r\nexport interface FairLaunchTicket {\r\n  fairLaunch: anchor.web3.PublicKey;\r\n  buyer: anchor.web3.PublicKey;\r\n  amount: anchor.BN;\r\n  state: {\r\n    punched?: {};\r\n    unpunched?: {};\r\n    withdrawn?: {};\r\n    no_sequence_struct: {};\r\n  };\r\n  bump: number;\r\n  seq: anchor.BN;\r\n}\r\n\r\nexport interface AntiRugSetting {\r\n  reserveBp: number;\r\n  tokenRequirement: anchor.BN;\r\n  selfDestructDate: anchor.BN;\r\n}\r\nexport interface FairLaunchState {\r\n  authority: anchor.web3.PublicKey;\r\n  bump: number;\r\n\r\n  currentMedian: anchor.BN;\r\n  currentEligibleHolders: anchor.BN;\r\n  data: {\r\n    antiRugSetting?: AntiRugSetting;\r\n    fee: anchor.BN;\r\n    numberOfTokens: anchor.BN;\r\n    phaseOneEnd: anchor.BN;\r\n    phaseOneStart: anchor.BN;\r\n    phaseTwoEnd: anchor.BN;\r\n    priceRangeEnd: anchor.BN;\r\n    priceRangeStart: anchor.BN;\r\n    lotteryDuration: anchor.BN;\r\n    tickSize: anchor.BN;\r\n    uuid: string;\r\n  };\r\n  numberTicketsDropped: anchor.BN;\r\n  numberTicketsPunched: anchor.BN;\r\n  numberTicketsSold: anchor.BN;\r\n  numberTicketsUnSeqed: anchor.BN;\r\n  numberTokensBurnedForRefunds: anchor.BN;\r\n  numberTokensPreminted: anchor.BN;\r\n  phaseThreeStarted: boolean;\r\n  tokenMint: anchor.web3.PublicKey;\r\n  tokenMintBump: number;\r\n  treasury: anchor.web3.PublicKey;\r\n  treasuryBump: number;\r\n  treasuryMint: anchor.web3.PublicKey; // only for SPL tokens\r\n  treasurySnapshot: null;\r\n}\r\n\r\nexport enum LotteryState {\r\n  Brewing = 'Brewing',\r\n  Finished = 'Finished',\r\n  PastDue = 'Past Due',\r\n}\r\n\r\nexport const getLotteryState = (\r\n  phaseThree: boolean | undefined,\r\n  lottery: Uint8Array | null,\r\n  lotteryDuration: anchor.BN,\r\n  phaseTwoEnd: anchor.BN,\r\n): LotteryState => {\r\n  if (\r\n    !phaseThree &&\r\n    (!lottery || lottery.length === 0) &&\r\n    phaseTwoEnd.add(lotteryDuration).lt(new anchor.BN(Date.now() / 1000))\r\n  ) {\r\n    return LotteryState.PastDue;\r\n  } else if (phaseThree) {\r\n    return LotteryState.Finished;\r\n  } else {\r\n    return LotteryState.Brewing;\r\n  }\r\n};\r\n\r\nexport const getFairLaunchState = async (\r\n  anchorWallet: anchor.Wallet,\r\n  fairLaunchId: anchor.web3.PublicKey,\r\n  connection: anchor.web3.Connection,\r\n): Promise<FairLaunchAccount> => {\r\n  const provider = new anchor.Provider(connection, anchorWallet, {\r\n    preflightCommitment: 'recent',\r\n  });\r\n\r\n  const idl = await anchor.Program.fetchIdl(FAIR_LAUNCH_PROGRAM, provider);\r\n\r\n  const program = new anchor.Program(idl, FAIR_LAUNCH_PROGRAM, provider);\r\n  const state: any = await program.account.fairLaunch.fetch(fairLaunchId);\r\n\r\n  const [fairLaunchTicket, bump] = await getFairLaunchTicket(\r\n    //@ts-ignore\r\n    state.tokenMint,\r\n    anchorWallet.publicKey,\r\n  );\r\n\r\n  let fairLaunchData: any;\r\n\r\n  try {\r\n    fairLaunchData = await program.account.fairLaunchTicket.fetch(\r\n      fairLaunchTicket,\r\n    );\r\n  } catch {\r\n    console.log('No ticket');\r\n  }\r\n\r\n  const treasury = await program.provider.connection.getBalance(state.treasury);\r\n\r\n  let lotteryData: Uint8Array = new Uint8Array([]);\r\n  let fairLaunchLotteryBitmap = (\r\n    await getFairLaunchLotteryBitmap(\r\n      //@ts-ignore\r\n      state.tokenMint,\r\n    )\r\n  )[0];\r\n\r\n  try {\r\n    const fairLaunchLotteryBitmapObj =\r\n      await program.provider.connection.getAccountInfo(fairLaunchLotteryBitmap);\r\n\r\n    lotteryData = new Uint8Array(fairLaunchLotteryBitmapObj?.data || []);\r\n  } catch (e) {\r\n    console.log('Could not find fair launch lottery.');\r\n    console.log(e);\r\n  }\r\n\r\n  return {\r\n    id: fairLaunchId,\r\n    state,\r\n    program,\r\n    ticket: {\r\n      pubkey: fairLaunchTicket,\r\n      bump,\r\n      data: fairLaunchData,\r\n    },\r\n    lottery: {\r\n      pubkey: fairLaunchLotteryBitmap,\r\n      data: lotteryData,\r\n    },\r\n    treasury,\r\n  };\r\n};\r\n\r\nexport const punchTicket = async (\r\n  anchorWallet: anchor.Wallet,\r\n  fairLaunch: FairLaunchAccount,\r\n) => {\r\n  const fairLaunchTicket = (\r\n    await getFairLaunchTicket(\r\n      //@ts-ignore\r\n      fairLaunch.state.tokenMint,\r\n      anchorWallet.publicKey,\r\n    )\r\n  )[0];\r\n\r\n  const ticket = fairLaunch.ticket.data;\r\n\r\n  const fairLaunchLotteryBitmap = ( //@ts-ignore\r\n    await getFairLaunchLotteryBitmap(fairLaunch.state.tokenMint)\r\n  )[0];\r\n\r\n  const buyerTokenAccount = (\r\n    await getAtaForMint(\r\n      //@ts-ignore\r\n      fairLaunch.state.tokenMint,\r\n      anchorWallet.publicKey,\r\n    )\r\n  )[0];\r\n\r\n  if (ticket?.amount.gt(fairLaunch.state.currentMedian)) {\r\n    console.log(\r\n      'Adjusting down...',\r\n      ticket?.amount.toNumber(),\r\n      fairLaunch.state.currentMedian.toNumber(),\r\n    );\r\n    const { remainingAccounts, instructions, signers } =\r\n      await getSetupForTicketing(\r\n        fairLaunch.program,\r\n        fairLaunch.state.currentMedian.toNumber(),\r\n        anchorWallet,\r\n        fairLaunch,\r\n        fairLaunchTicket,\r\n      );\r\n    await fairLaunch.program.rpc.adjustTicket(fairLaunch.state.currentMedian, {\r\n      accounts: {\r\n        fairLaunchTicket,\r\n        fairLaunch: fairLaunch.id,\r\n        fairLaunchLotteryBitmap,\r\n        //@ts-ignore\r\n        treasury: fairLaunch.state.treasury,\r\n        systemProgram: anchor.web3.SystemProgram.programId,\r\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n      },\r\n      __private: { logAccounts: true },\r\n      instructions: instructions.length > 0 ? instructions : undefined,\r\n      remainingAccounts: [\r\n        {\r\n          pubkey: anchorWallet.publicKey,\r\n          isSigner: true,\r\n          isWritable: true,\r\n        },\r\n        ...remainingAccounts,\r\n      ],\r\n      signers,\r\n    });\r\n  }\r\n\r\n  const accountExists =\r\n    await fairLaunch.program.provider.connection.getAccountInfo(\r\n      buyerTokenAccount,\r\n    );\r\n\r\n  const instructions = !accountExists\r\n    ? [\r\n        createAssociatedTokenAccountInstruction(\r\n          buyerTokenAccount,\r\n          anchorWallet.publicKey,\r\n          anchorWallet.publicKey,\r\n          //@ts-ignore\r\n          fairLaunch.state.tokenMint,\r\n        ),\r\n      ]\r\n    : [];\r\n\r\n  await fairLaunch.program.rpc.punchTicket({\r\n    accounts: {\r\n      fairLaunchTicket,\r\n      fairLaunch: fairLaunch.id,\r\n      fairLaunchLotteryBitmap,\r\n      payer: anchorWallet.publicKey,\r\n      buyerTokenAccount,\r\n      //@ts-ignore\r\n      tokenMint: fairLaunch.state.tokenMint,\r\n      tokenProgram: TOKEN_PROGRAM_ID,\r\n    },\r\n    instructions: instructions.length > 0 ? instructions : undefined,\r\n  });\r\n};\r\n\r\nexport const getFairLaunchTicket = async (\r\n  tokenMint: anchor.web3.PublicKey,\r\n  buyer: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), buyer.toBuffer()],\r\n    FAIR_LAUNCH_PROGRAM,\r\n  );\r\n};\r\n\r\nexport const getFairLaunchLotteryBitmap = async (\r\n  tokenMint: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), Buffer.from('lottery')],\r\n    FAIR_LAUNCH_PROGRAM,\r\n  );\r\n};\r\n\r\nconst getSetupForTicketing = async (\r\n  anchorProgram: anchor.Program,\r\n  amount: number,\r\n  anchorWallet: anchor.Wallet,\r\n  fairLaunch: FairLaunchAccount | undefined,\r\n  ticketKey: anchor.web3.PublicKey,\r\n): Promise<{\r\n  remainingAccounts: {\r\n    pubkey: anchor.web3.PublicKey | null;\r\n    isWritable: boolean;\r\n    isSigner: boolean;\r\n  }[];\r\n  instructions: TransactionInstruction[];\r\n  signers: anchor.web3.Keypair[];\r\n  amountLamports: number;\r\n}> => {\r\n  if (!fairLaunch) {\r\n    return {\r\n      remainingAccounts: [],\r\n      instructions: [],\r\n      signers: [],\r\n      amountLamports: 0,\r\n    };\r\n  }\r\n  const ticket = fairLaunch.ticket;\r\n\r\n  const remainingAccounts = [];\r\n  const instructions = [];\r\n  const signers = [];\r\n\r\n  let amountLamports = 0;\r\n  //@ts-ignore\r\n  if (!fairLaunch.state.treasuryMint) {\r\n    if (!ticket && amount === 0) {\r\n      amountLamports = fairLaunch.state.data.priceRangeStart.toNumber();\r\n    } else {\r\n      amountLamports = Math.ceil(amount * LAMPORTS_PER_SOL);\r\n    }\r\n  } else {\r\n    const transferAuthority = anchor.web3.Keypair.generate();\r\n    signers.push(transferAuthority);\r\n    // NOTE this token impl will not work till you get decimal mantissa and multiply...\r\n    /// ex from cli wont work since you dont have a Signer, but an anchor.Wallet\r\n    /*\r\n    const token = new Token(\r\n        anchorProgram.provider.connection,\r\n        //@ts-ignore\r\n        fairLaunchObj.treasuryMint,\r\n        TOKEN_PROGRAM_ID,\r\n        walletKeyPair,\r\n      );\r\n      const mintInfo = await token.getMintInfo();\r\n      amountNumber = Math.ceil(amountNumber * 10 ** mintInfo.decimals);\r\n    */\r\n    instructions.push(\r\n      Token.createApproveInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        //@ts-ignore\r\n        fairLaunch.state.treasuryMint,\r\n        transferAuthority.publicKey,\r\n        anchorWallet.publicKey,\r\n        [],\r\n        //@ts-ignore\r\n\r\n        // TODO: get mint decimals\r\n        amountNumber + fairLaunch.state.data.fees.toNumber(),\r\n      ),\r\n    );\r\n\r\n    remainingAccounts.push({\r\n      //@ts-ignore\r\n      pubkey: fairLaunch.state.treasuryMint,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: (\r\n        await getAtaForMint(\r\n          //@ts-ignore\r\n          fairLaunch.state.treasuryMint,\r\n          anchorWallet.publicKey,\r\n        )\r\n      )[0],\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: transferAuthority.publicKey,\r\n      isWritable: false,\r\n      isSigner: true,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: TOKEN_PROGRAM_ID,\r\n      isWritable: false,\r\n      isSigner: false,\r\n    });\r\n  }\r\n\r\n  if (ticket.data) {\r\n    const [fairLaunchTicketSeqLookup, seqBump] =\r\n      await getFairLaunchTicketSeqLookup(\r\n        fairLaunch.state.tokenMint,\r\n        ticket.data?.seq,\r\n      );\r\n\r\n    const seq = await anchorProgram.provider.connection.getAccountInfo(\r\n      fairLaunchTicketSeqLookup,\r\n    );\r\n    if (!seq) {\r\n      instructions.push(\r\n        await anchorProgram.instruction.createTicketSeq(seqBump, {\r\n          accounts: {\r\n            fairLaunchTicketSeqLookup,\r\n            fairLaunch: fairLaunch.id,\r\n            fairLaunchTicket: ticketKey,\r\n            payer: anchorWallet.publicKey,\r\n            systemProgram: anchor.web3.SystemProgram.programId,\r\n            rent: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n          },\r\n          signers: [],\r\n        }),\r\n      );\r\n    }\r\n  }\r\n\r\n  return {\r\n    remainingAccounts,\r\n    instructions,\r\n    signers,\r\n    amountLamports,\r\n  };\r\n};\r\n\r\nexport const receiveRefund = async (\r\n  anchorWallet: anchor.Wallet,\r\n  fairLaunch: FairLaunchAccount | undefined,\r\n) => {\r\n  if (!fairLaunch) {\r\n    return;\r\n  }\r\n\r\n  const buyerTokenAccount = (\r\n    await getAtaForMint(fairLaunch.state.tokenMint, anchorWallet.publicKey)\r\n  )[0];\r\n\r\n  const transferAuthority = anchor.web3.Keypair.generate();\r\n\r\n  const signers = [transferAuthority];\r\n  const instructions = [\r\n    Token.createApproveInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      buyerTokenAccount,\r\n      transferAuthority.publicKey,\r\n      anchorWallet.publicKey,\r\n      [],\r\n      1,\r\n    ),\r\n  ];\r\n\r\n  const remainingAccounts = [];\r\n\r\n  if (fairLaunch.state.treasuryMint) {\r\n    remainingAccounts.push({\r\n      pubkey: fairLaunch.state.treasuryMint,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: (\r\n        await getAtaForMint(\r\n          fairLaunch.state.treasuryMint,\r\n          anchorWallet.publicKey,\r\n        )\r\n      )[0],\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n  }\r\n\r\n  console.log(\r\n    'tfr',\r\n    fairLaunch.state.treasury.toBase58(),\r\n    anchorWallet.publicKey.toBase58(),\r\n    buyerTokenAccount.toBase58(),\r\n  );\r\n  await fairLaunch.program.rpc.receiveRefund({\r\n    accounts: {\r\n      fairLaunch: fairLaunch.id,\r\n      treasury: fairLaunch.state.treasury,\r\n      buyer: anchorWallet.publicKey,\r\n      buyerTokenAccount,\r\n      transferAuthority: transferAuthority.publicKey,\r\n      tokenMint: fairLaunch.state.tokenMint,\r\n      tokenProgram: TOKEN_PROGRAM_ID,\r\n      systemProgram: anchor.web3.SystemProgram.programId,\r\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n    },\r\n\r\n    __private: { logAccounts: true },\r\n    remainingAccounts,\r\n    instructions,\r\n    signers,\r\n  });\r\n};\r\nexport const purchaseTicket = async (\r\n  amount: number,\r\n  anchorWallet: anchor.Wallet,\r\n  fairLaunch: FairLaunchAccount | undefined,\r\n) => {\r\n  if (!fairLaunch) {\r\n    return;\r\n  }\r\n\r\n  const ticket = fairLaunch.ticket.data;\r\n\r\n  const [fairLaunchTicket, bump] = await getFairLaunchTicket(\r\n    //@ts-ignore\r\n    fairLaunch.state.tokenMint,\r\n    anchorWallet.publicKey,\r\n  );\r\n\r\n  const { remainingAccounts, instructions, signers, amountLamports } =\r\n    await getSetupForTicketing(\r\n      fairLaunch.program,\r\n      amount,\r\n      anchorWallet,\r\n      fairLaunch,\r\n      fairLaunchTicket,\r\n    );\r\n\r\n  if (ticket) {\r\n    const fairLaunchLotteryBitmap = //@ts-ignore\r\n    (await getFairLaunchLotteryBitmap(fairLaunch.state.tokenMint))[0];\r\n    console.log(\r\n      'Anchor wallet',\r\n      anchorWallet.publicKey.toBase58(),\r\n      amountLamports,\r\n    );\r\n    await fairLaunch.program.rpc.adjustTicket(new anchor.BN(amountLamports), {\r\n      accounts: {\r\n        fairLaunchTicket,\r\n        fairLaunch: fairLaunch.id,\r\n        fairLaunchLotteryBitmap,\r\n        //@ts-ignore\r\n        treasury: fairLaunch.state.treasury,\r\n        systemProgram: anchor.web3.SystemProgram.programId,\r\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n      },\r\n      __private: { logAccounts: true },\r\n      remainingAccounts: [\r\n        {\r\n          pubkey: anchorWallet.publicKey,\r\n          isSigner: true,\r\n          isWritable: true,\r\n        },\r\n        ...remainingAccounts,\r\n      ],\r\n      signers,\r\n      instructions: instructions.length > 0 ? instructions : undefined,\r\n    });\r\n\r\n    return;\r\n  }\r\n  try {\r\n    console.log('Amount', amountLamports);\r\n    await fairLaunch.program.rpc.purchaseTicket(\r\n      bump,\r\n      new anchor.BN(amountLamports),\r\n      {\r\n        accounts: {\r\n          fairLaunchTicket,\r\n          fairLaunch: fairLaunch.id,\r\n          //@ts-ignore\r\n          treasury: fairLaunch.state.treasury,\r\n          buyer: anchorWallet.publicKey,\r\n          payer: anchorWallet.publicKey,\r\n          systemProgram: anchor.web3.SystemProgram.programId,\r\n          rent: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n          clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n        },\r\n        //__private: { logAccounts: true },\r\n        remainingAccounts,\r\n        signers,\r\n        instructions: instructions.length > 0 ? instructions : undefined,\r\n      },\r\n    );\r\n  } catch (e) {\r\n    console.log(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport const withdrawFunds = async (\r\n  anchorWallet: anchor.Wallet,\r\n  fairLaunch: FairLaunchAccount | undefined,\r\n) => {\r\n  if (!fairLaunch) {\r\n    return;\r\n  }\r\n\r\n  // TODO: create sequence ticket\r\n\r\n  const remainingAccounts = [];\r\n\r\n  //@ts-ignore\r\n  if (fairLaunch.state.treasuryMint) {\r\n    remainingAccounts.push({\r\n      //@ts-ignore\r\n      pubkey: fairLaunch.state.treasuryMint,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: (\r\n        await getAtaForMint(\r\n          //@ts-ignore\r\n          fairLaunch.state.treasuryMint,\r\n          anchorWallet.publicKey,\r\n        )\r\n      )[0],\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: TOKEN_PROGRAM_ID,\r\n      isWritable: false,\r\n      isSigner: false,\r\n    });\r\n  }\r\n\r\n  await fairLaunch.program.rpc.withdrawFunds({\r\n    accounts: {\r\n      fairLaunch: fairLaunch.id,\r\n      // @ts-ignore\r\n      treasury: fairLaunch.state.treasury,\r\n      authority: anchorWallet.publicKey,\r\n      // @ts-ignore\r\n      tokenMint: fairLaunch.state.tokenMint,\r\n      systemProgram: anchor.web3.SystemProgram.programId,\r\n    },\r\n    remainingAccounts,\r\n  });\r\n};\r\n","import * as anchor from '@project-serum/anchor';\r\n\r\nimport { MintLayout, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\r\nimport { SystemProgram } from '@solana/web3.js';\r\nimport { sendTransactionWithRetry } from './connection';\r\n\r\nimport {\r\n  getAtaForMint,\r\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n} from './utils';\r\n\r\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\r\n  'cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ',\r\n);\r\n\r\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\r\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\r\n);\r\n\r\ninterface CandyMachineState {\r\n  itemsAvailable: number;\r\n  itemsRedeemed: number;\r\n  itemsRemaining: number;\r\n  config: anchor.web3.PublicKey;\r\n  treasury: anchor.web3.PublicKey;\r\n  tokenMint: anchor.web3.PublicKey;\r\n  isSoldOut: boolean;\r\n  isActive: boolean;\r\n  goLiveDate: anchor.BN;\r\n  price: anchor.BN;\r\n}\r\n\r\nexport interface CandyMachineAccount {\r\n  id: anchor.web3.PublicKey;\r\n  program: anchor.Program;\r\n  state: CandyMachineState;\r\n}\r\n\r\nexport const awaitTransactionSignatureConfirmation = async (\r\n  txid: anchor.web3.TransactionSignature,\r\n  timeout: number,\r\n  connection: anchor.web3.Connection,\r\n  commitment: anchor.web3.Commitment = 'recent',\r\n  queryStatus = false,\r\n): Promise<anchor.web3.SignatureStatus | null | void> => {\r\n  let done = false;\r\n  let status: anchor.web3.SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      console.log('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          if (!done) {\r\n            if (!status) {\r\n              console.log('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              console.log('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              console.log('REST no confirmations for', txid, status);\r\n            } else {\r\n              console.log('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            console.log('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId]) {\r\n    connection.removeSignatureListener(subId);\r\n  }\r\n  done = true;\r\n  console.log('Returning status', status);\r\n  return status;\r\n};\r\n\r\n/* export */ const createAssociatedTokenAccountInstruction = (\r\n  associatedTokenAddress: anchor.web3.PublicKey,\r\n  payer: anchor.web3.PublicKey,\r\n  walletAddress: anchor.web3.PublicKey,\r\n  splTokenMintAddress: anchor.web3.PublicKey,\r\n) => {\r\n  const keys = [\r\n    { pubkey: payer, isSigner: true, isWritable: true },\r\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\r\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\r\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SystemProgram.programId,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ];\r\n  return new anchor.web3.TransactionInstruction({\r\n    keys,\r\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n    data: Buffer.from([]),\r\n  });\r\n};\r\n\r\nexport const getCandyMachineState = async (\r\n  anchorWallet: anchor.Wallet,\r\n  candyMachineId: anchor.web3.PublicKey,\r\n  connection: anchor.web3.Connection,\r\n): Promise<CandyMachineAccount> => {\r\n  const provider = new anchor.Provider(connection, anchorWallet, {\r\n    preflightCommitment: 'recent',\r\n  });\r\n\r\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\r\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\r\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\r\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\r\n\r\n  return {\r\n    id: candyMachineId,\r\n    program,\r\n    state: {\r\n      itemsAvailable,\r\n      itemsRedeemed,\r\n      itemsRemaining,\r\n      isSoldOut: itemsRemaining === 0,\r\n      isActive: state.data.goLiveDate.toNumber() < new Date().getTime() / 1000,\r\n      goLiveDate: state.data.goLiveDate,\r\n      treasury: state.wallet,\r\n      tokenMint: state.tokenMint,\r\n      config: state.config,\r\n      price: state.data.price,\r\n    },\r\n  };\r\n};\r\n\r\nconst getMasterEdition = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n        Buffer.from('edition'),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nconst getMetadata = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nexport const mintOneToken = async (\r\n  candyMachine: CandyMachineAccount,\r\n  payer: anchor.web3.PublicKey,\r\n): Promise<string> => {\r\n  const mint = anchor.web3.Keypair.generate();\r\n\r\n  const userTokenAccountAddress = (\r\n    await getAtaForMint(mint.publicKey, payer)\r\n  )[0];\r\n\r\n  const userPayingAccountAddress = (\r\n    await getAtaForMint(candyMachine.state.tokenMint, payer)\r\n  )[0];\r\n\r\n  const candyMachineAddress = candyMachine.id;\r\n\r\n  const remainingAccounts = [];\r\n  const signers: anchor.web3.Keypair[] = [mint];\r\n  const instructions = [\r\n    anchor.web3.SystemProgram.createAccount({\r\n      fromPubkey: payer,\r\n      newAccountPubkey: mint.publicKey,\r\n      space: MintLayout.span,\r\n      lamports:\r\n        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\r\n          MintLayout.span,\r\n        ),\r\n      programId: TOKEN_PROGRAM_ID,\r\n    }),\r\n    Token.createInitMintInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      0,\r\n      payer,\r\n      payer,\r\n    ),\r\n    createAssociatedTokenAccountInstruction(\r\n      userTokenAccountAddress,\r\n      payer,\r\n      payer,\r\n      mint.publicKey,\r\n    ),\r\n    Token.createMintToInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      userTokenAccountAddress,\r\n      payer,\r\n      [],\r\n      1,\r\n    ),\r\n  ];\r\n\r\n  let tokenAccount;\r\n  if (candyMachine.state.tokenMint) {\r\n    const transferAuthority = anchor.web3.Keypair.generate();\r\n\r\n    signers.push(transferAuthority);\r\n    remainingAccounts.push({\r\n      pubkey: userPayingAccountAddress,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: transferAuthority.publicKey,\r\n      isWritable: false,\r\n      isSigner: true,\r\n    });\r\n\r\n    instructions.push(\r\n      Token.createApproveInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        userPayingAccountAddress,\r\n        transferAuthority.publicKey,\r\n        payer,\r\n        [],\r\n        candyMachine.state.price.toNumber(),\r\n      ),\r\n    );\r\n  }\r\n  const metadataAddress = await getMetadata(mint.publicKey);\r\n  const masterEdition = await getMasterEdition(mint.publicKey);\r\n\r\n  instructions.push(\r\n    await candyMachine.program.instruction.mintNft({\r\n      accounts: {\r\n        config: candyMachine.state.config,\r\n        candyMachine: candyMachineAddress,\r\n        payer,\r\n        wallet: candyMachine.state.treasury,\r\n        mint: mint.publicKey,\r\n        metadata: metadataAddress,\r\n        masterEdition,\r\n        mintAuthority: payer,\r\n        updateAuthority: payer,\r\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\r\n        tokenProgram: TOKEN_PROGRAM_ID,\r\n        systemProgram: SystemProgram.programId,\r\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n      },\r\n      remainingAccounts:\r\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\r\n    }),\r\n  );\r\n\r\n  if (tokenAccount) {\r\n    instructions.push(\r\n      Token.createRevokeInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        userPayingAccountAddress,\r\n        payer,\r\n        [],\r\n      ),\r\n    );\r\n  }\r\n  try {\r\n    return (\r\n      await sendTransactionWithRetry(\r\n        candyMachine.program.provider.connection,\r\n        candyMachine.program.provider.wallet,\r\n        instructions,\r\n        signers,\r\n      )\r\n    ).txid;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  return 'j';\r\n};\r\n\r\nexport const shortenAddress = (address: string, chars = 4): string => {\r\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\r\n};\r\n\r\nconst sleep = (ms: number): Promise<void> => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n","import * as anchor from '@project-serum/anchor';\r\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\r\nimport { SystemProgram } from '@solana/web3.js';\r\nimport {\r\n  LAMPORTS_PER_SOL,\r\n  SYSVAR_RENT_PUBKEY,\r\n  TransactionInstruction,\r\n} from '@solana/web3.js';\r\n\r\nexport const FAIR_LAUNCH_PROGRAM_ID = new anchor.web3.PublicKey(\r\n  'faircnAB9k59Y4TXmLabBULeuTLgV7TkGMGNkjnA15j',\r\n);\r\n\r\nexport const toDate = (value?: anchor.BN) => {\r\n  if (!value) {\r\n    return;\r\n  }\r\n\r\n  return new Date(value.toNumber() * 1000);\r\n};\r\n\r\nconst numberFormater = new Intl.NumberFormat('en-US', {\r\n  style: 'decimal',\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nexport const formatNumber = {\r\n  format: (val?: number) => {\r\n    if (!val) {\r\n      return '--';\r\n    }\r\n\r\n    return numberFormater.format(val);\r\n  },\r\n  asNumber: (val?: anchor.BN) => {\r\n    if (!val) {\r\n      return undefined;\r\n    }\r\n\r\n    return val.toNumber() / LAMPORTS_PER_SOL;\r\n  },\r\n};\r\n\r\nexport const SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID =\r\n  new anchor.web3.PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\r\n\r\nexport const getFairLaunchTicketSeqLookup = async (\r\n  tokenMint: anchor.web3.PublicKey,\r\n  seq: anchor.BN,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [\r\n      Buffer.from('fair_launch'),\r\n      tokenMint.toBuffer(),\r\n      seq.toArrayLike(Buffer, 'le', 8),\r\n    ],\r\n    FAIR_LAUNCH_PROGRAM_ID,\r\n  );\r\n};\r\n\r\nexport const getAtaForMint = async (\r\n  mint: anchor.web3.PublicKey,\r\n  buyer: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [buyer.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\r\n    SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n  );\r\n};\r\n\r\nexport const getFairLaunchTicket = async (\r\n  tokenMint: anchor.web3.PublicKey,\r\n  buyer: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), buyer.toBuffer()],\r\n    FAIR_LAUNCH_PROGRAM_ID,\r\n  );\r\n};\r\n\r\nexport function createAssociatedTokenAccountInstruction(\r\n  associatedTokenAddress: anchor.web3.PublicKey,\r\n  payer: anchor.web3.PublicKey,\r\n  walletAddress: anchor.web3.PublicKey,\r\n  splTokenMintAddress: anchor.web3.PublicKey,\r\n) {\r\n  const keys = [\r\n    {\r\n      pubkey: payer,\r\n      isSigner: true,\r\n      isWritable: true,\r\n    },\r\n    {\r\n      pubkey: associatedTokenAddress,\r\n      isSigner: false,\r\n      isWritable: true,\r\n    },\r\n    {\r\n      pubkey: walletAddress,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: splTokenMintAddress,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: SystemProgram.programId,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: TOKEN_PROGRAM_ID,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ];\r\n  return new TransactionInstruction({\r\n    keys,\r\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n    data: Buffer.from([]),\r\n  });\r\n}\r\n","import {\r\n  Keypair,\r\n  Commitment,\r\n  Connection,\r\n  RpcResponseAndContext,\r\n  SignatureStatus,\r\n  SimulatedTransactionResponse,\r\n  Transaction,\r\n  TransactionInstruction,\r\n  TransactionSignature,\r\n  Blockhash,\r\n  FeeCalculator,\r\n} from '@solana/web3.js';\r\n\r\nimport {\r\n  WalletNotConnectedError,\r\n} from '@solana/wallet-adapter-base';\r\n\r\ninterface BlockhashAndFeeCalculator {\r\n  blockhash: Blockhash;\r\n  feeCalculator: FeeCalculator;\r\n}\r\n\r\nexport const getErrorForTransaction = async (\r\n  connection: Connection,\r\n  txid: string,\r\n) => {\r\n  // wait for all confirmation before geting transaction\r\n  await connection.confirmTransaction(txid, 'max');\r\n\r\n  const tx = await connection.getParsedConfirmedTransaction(txid);\r\n\r\n  const errors: string[] = [];\r\n  if (tx?.meta && tx.meta.logMessages) {\r\n    tx.meta.logMessages.forEach(log => {\r\n      const regex = /Error: (.*)/gm;\r\n      let m;\r\n      while ((m = regex.exec(log)) !== null) {\r\n        // This is necessary to avoid infinite loops with zero-width matches\r\n        if (m.index === regex.lastIndex) {\r\n          regex.lastIndex++;\r\n        }\r\n\r\n        if (m.length > 1) {\r\n          errors.push(m[1]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport enum SequenceType {\r\n  Sequential,\r\n  Parallel,\r\n  StopOnFailure,\r\n}\r\n\r\nexport async function sendTransactionsWithManualRetry(\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[][],\r\n  signers: Keypair[][],\r\n) {\r\n  let stopPoint = 0;\r\n  let tries = 0;\r\n  let lastInstructionsLength = null;\r\n  let toRemoveSigners: Record<number, boolean> = {};\r\n  instructions = instructions.filter((instr, i) => {\r\n    if (instr.length > 0) {\r\n      return true;\r\n    } else {\r\n      toRemoveSigners[i] = true;\r\n      return false;\r\n    }\r\n  });\r\n  let filteredSigners = signers.filter((_, i) => !toRemoveSigners[i]);\r\n\r\n  while (stopPoint < instructions.length && tries < 3) {\r\n    instructions = instructions.slice(stopPoint, instructions.length);\r\n    filteredSigners = filteredSigners.slice(stopPoint, filteredSigners.length);\r\n\r\n    if (instructions.length === lastInstructionsLength) tries = tries + 1;\r\n    else tries = 0;\r\n\r\n    try {\r\n      if (instructions.length === 1) {\r\n        await sendTransactionWithRetry(\r\n          connection,\r\n          wallet,\r\n          instructions[0],\r\n          filteredSigners[0],\r\n          'single',\r\n        );\r\n        stopPoint = 1;\r\n      } else {\r\n        stopPoint = await sendTransactions(\r\n          connection,\r\n          wallet,\r\n          instructions,\r\n          filteredSigners,\r\n          SequenceType.StopOnFailure,\r\n          'single',\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    console.log(\r\n      'Died on ',\r\n      stopPoint,\r\n      'retrying from instruction',\r\n      instructions[stopPoint],\r\n      'instructions length is',\r\n      instructions.length,\r\n    );\r\n    lastInstructionsLength = instructions.length;\r\n  }\r\n}\r\n\r\nexport const sendTransactions = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructionSet: TransactionInstruction[][],\r\n  signersSet: Keypair[][],\r\n  sequenceType: SequenceType = SequenceType.Parallel,\r\n  commitment: Commitment = 'singleGossip',\r\n  successCallback: (txid: string, ind: number) => void = (txid, ind) => {},\r\n  failCallback: (reason: string, ind: number) => boolean = (txid, ind) => false,\r\n  block?: BlockhashAndFeeCalculator,\r\n): Promise<number> => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  const unsignedTxns: Transaction[] = [];\r\n\r\n  if (!block) {\r\n    block = await connection.getRecentBlockhash(commitment);\r\n  }\r\n\r\n  for (let i = 0; i < instructionSet.length; i++) {\r\n    const instructions = instructionSet[i];\r\n    const signers = signersSet[i];\r\n\r\n    if (instructions.length === 0) {\r\n      continue;\r\n    }\r\n\r\n    let transaction = new Transaction();\r\n    instructions.forEach(instruction => transaction.add(instruction));\r\n    transaction.recentBlockhash = block.blockhash;\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n\r\n    if (signers.length > 0) {\r\n      transaction.partialSign(...signers);\r\n    }\r\n\r\n    unsignedTxns.push(transaction);\r\n  }\r\n\r\n  const signedTxns = await wallet.signAllTransactions(unsignedTxns);\r\n\r\n  const pendingTxns: Promise<{ txid: string; slot: number }>[] = [];\r\n\r\n  let breakEarlyObject = { breakEarly: false, i: 0 };\r\n  console.log(\r\n    'Signed txns length',\r\n    signedTxns.length,\r\n    'vs handed in length',\r\n    instructionSet.length,\r\n  );\r\n  for (let i = 0; i < signedTxns.length; i++) {\r\n    const signedTxnPromise = sendSignedTransaction({\r\n      connection,\r\n      signedTransaction: signedTxns[i],\r\n    });\r\n\r\n    signedTxnPromise\r\n      .then(({ txid, slot }) => {\r\n        successCallback(txid, i);\r\n      })\r\n      .catch(reason => {\r\n        // @ts-ignore\r\n        failCallback(signedTxns[i], i);\r\n        if (sequenceType === SequenceType.StopOnFailure) {\r\n          breakEarlyObject.breakEarly = true;\r\n          breakEarlyObject.i = i;\r\n        }\r\n      });\r\n\r\n    if (sequenceType !== SequenceType.Parallel) {\r\n      try {\r\n        await signedTxnPromise;\r\n      } catch (e) {\r\n        console.log('Caught failure', e);\r\n        if (breakEarlyObject.breakEarly) {\r\n          console.log('Died on ', breakEarlyObject.i);\r\n          return breakEarlyObject.i; // Return the txn we failed on by index\r\n        }\r\n      }\r\n    } else {\r\n      pendingTxns.push(signedTxnPromise);\r\n    }\r\n  }\r\n\r\n  if (sequenceType !== SequenceType.Parallel) {\r\n    await Promise.all(pendingTxns);\r\n  }\r\n\r\n  return signedTxns.length;\r\n};\r\n\r\nexport const sendTransaction = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[],\r\n  signers: Keypair[],\r\n  awaitConfirmation = true,\r\n  commitment: Commitment = 'singleGossip',\r\n  includesFeePayer: boolean = false,\r\n  block?: BlockhashAndFeeCalculator,\r\n) => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  let transaction = new Transaction();\r\n  instructions.forEach(instruction => transaction.add(instruction));\r\n  transaction.recentBlockhash = (\r\n    block || (await connection.getRecentBlockhash(commitment))\r\n  ).blockhash;\r\n\r\n  if (includesFeePayer) {\r\n    transaction.setSigners(...signers.map(s => s.publicKey));\r\n  } else {\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n  }\r\n\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  if (!includesFeePayer) {\r\n    transaction = await wallet.signTransaction(transaction);\r\n  }\r\n\r\n  const rawTransaction = transaction.serialize();\r\n  let options = {\r\n    skipPreflight: true,\r\n    commitment,\r\n  };\r\n\r\n  const txid = await connection.sendRawTransaction(rawTransaction, options);\r\n  let slot = 0;\r\n\r\n  if (awaitConfirmation) {\r\n    const confirmation = await awaitTransactionSignatureConfirmation(\r\n      txid,\r\n      DEFAULT_TIMEOUT,\r\n      connection,\r\n      commitment,\r\n    );\r\n\r\n    if (!confirmation)\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    slot = confirmation?.slot || 0;\r\n\r\n    if (confirmation?.err) {\r\n      const errors = await getErrorForTransaction(connection, txid);\r\n\r\n      console.log(errors);\r\n      throw new Error(`Raw transaction ${txid} failed`);\r\n    }\r\n  }\r\n\r\n  return { txid, slot };\r\n};\r\n\r\nexport const sendTransactionWithRetry = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[],\r\n  signers: Keypair[],\r\n  commitment: Commitment = 'singleGossip',\r\n  includesFeePayer: boolean = false,\r\n  block?: BlockhashAndFeeCalculator,\r\n  beforeSend?: () => void,\r\n) => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  let transaction = new Transaction();\r\n  instructions.forEach(instruction => transaction.add(instruction));\r\n  transaction.recentBlockhash = (\r\n    block || (await connection.getRecentBlockhash(commitment))\r\n  ).blockhash;\r\n\r\n  if (includesFeePayer) {\r\n    transaction.setSigners(...signers.map(s => s.publicKey));\r\n  } else {\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n  }\r\n\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  if (!includesFeePayer) {\r\n    transaction = await wallet.signTransaction(transaction);\r\n  }\r\n\r\n  if (beforeSend) {\r\n    beforeSend();\r\n  }\r\n\r\n  const { txid, slot } = await sendSignedTransaction({\r\n    connection,\r\n    signedTransaction: transaction,\r\n  });\r\n\r\n  return { txid, slot };\r\n};\r\n\r\nexport const getUnixTs = () => {\r\n  return new Date().getTime() / 1000;\r\n};\r\n\r\nconst DEFAULT_TIMEOUT = 15000;\r\n\r\nexport async function sendSignedTransaction({\r\n  signedTransaction,\r\n  connection,\r\n  timeout = DEFAULT_TIMEOUT,\r\n}: {\r\n  signedTransaction: Transaction;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}): Promise<{ txid: string; slot: number }> {\r\n  const rawTransaction = signedTransaction.serialize();\r\n  const startTime = getUnixTs();\r\n  let slot = 0;\r\n  const txid: TransactionSignature = await connection.sendRawTransaction(\r\n    rawTransaction,\r\n    {\r\n      skipPreflight: true,\r\n    },\r\n  );\r\n\r\n  console.log('Started awaiting confirmation for', txid);\r\n\r\n  let done = false;\r\n  (async () => {\r\n    while (!done && getUnixTs() - startTime < timeout) {\r\n      connection.sendRawTransaction(rawTransaction, {\r\n        skipPreflight: true,\r\n      });\r\n      await sleep(500);\r\n    }\r\n  })();\r\n  try {\r\n    const confirmation = await awaitTransactionSignatureConfirmation(\r\n      txid,\r\n      timeout,\r\n      connection,\r\n      'recent',\r\n      true,\r\n    );\r\n\r\n    if (!confirmation)\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n\r\n    if (confirmation.err) {\r\n      console.error(confirmation.err);\r\n      throw new Error('Transaction failed: Custom instruction error');\r\n    }\r\n\r\n    slot = confirmation?.slot || 0;\r\n  } catch (err: any) {\r\n    console.error('Timeout Error caught', err);\r\n    if (err.timeout) {\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    }\r\n    let simulateResult: SimulatedTransactionResponse | null = null;\r\n    try {\r\n      simulateResult = (\r\n        await simulateTransaction(connection, signedTransaction, 'single')\r\n      ).value;\r\n    } catch (e) {}\r\n    if (simulateResult && simulateResult.err) {\r\n      if (simulateResult.logs) {\r\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\r\n          const line = simulateResult.logs[i];\r\n          if (line.startsWith('Program log: ')) {\r\n            throw new Error(\r\n              'Transaction failed: ' + line.slice('Program log: '.length),\r\n            );\r\n          }\r\n        }\r\n      }\r\n      throw new Error(JSON.stringify(simulateResult.err));\r\n    }\r\n    // throw new Error('Transaction failed');\r\n  } finally {\r\n    done = true;\r\n  }\r\n\r\n  console.log('Latency', txid, getUnixTs() - startTime);\r\n  return { txid, slot };\r\n}\r\n\r\nasync function simulateTransaction(\r\n  connection: Connection,\r\n  transaction: Transaction,\r\n  commitment: Commitment,\r\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\r\n  // @ts-ignore\r\n  transaction.recentBlockhash = await connection._recentBlockhash(\r\n    // @ts-ignore\r\n    connection._disableBlockhashCaching,\r\n  );\r\n\r\n  const signData = transaction.serializeMessage();\r\n  // @ts-ignore\r\n  const wireTransaction = transaction._serialize(signData);\r\n  const encodedTransaction = wireTransaction.toString('base64');\r\n  const config: any = { encoding: 'base64', commitment };\r\n  const args = [encodedTransaction, config];\r\n\r\n  // @ts-ignore\r\n  const res = await connection._rpcRequest('simulateTransaction', args);\r\n  if (res.error) {\r\n    throw new Error('failed to simulate transaction: ' + res.error.message);\r\n  }\r\n  return res.result;\r\n}\r\n\r\nasync function awaitTransactionSignatureConfirmation(\r\n  txid: TransactionSignature,\r\n  timeout: number,\r\n  connection: Connection,\r\n  commitment: Commitment = 'recent',\r\n  queryStatus = false,\r\n): Promise<SignatureStatus | null | void> {\r\n  let done = false;\r\n  let status: SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      console.log('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n    try {\r\n      subId = connection.onSignature(\r\n        txid,\r\n        (result, context) => {\r\n          done = true;\r\n          status = {\r\n            err: result.err,\r\n            slot: context.slot,\r\n            confirmations: 0,\r\n          };\r\n          if (result.err) {\r\n            console.log('Rejected via websocket', result.err);\r\n            reject(status);\r\n          } else {\r\n            console.log('Resolved via websocket', result);\r\n            resolve(status);\r\n          }\r\n        },\r\n        commitment,\r\n      );\r\n    } catch (e) {\r\n      done = true;\r\n      console.error('WS error in setup', txid, e);\r\n    }\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          if (!done) {\r\n            if (!status) {\r\n              console.log('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              console.log('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              console.log('REST no confirmations for', txid, status);\r\n            } else {\r\n              console.log('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            console.log('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId])\r\n    connection.removeSignatureListener(subId);\r\n  done = true;\r\n  console.log('Returning status', status);\r\n  return status;\r\n}\r\nexport function sleep(ms: number): Promise<void> {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  CircularProgress,\r\n  Container,\r\n  IconButton,\r\n  Link,\r\n  Slider,\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { createStyles, Theme } from '@material-ui/core/styles';\r\nimport { PhaseCountdown } from './countdown';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport * as anchor from '@project-serum/anchor';\r\n\r\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\r\n\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\r\n\r\nimport {\r\n  awaitTransactionSignatureConfirmation,\r\n  CandyMachineAccount,\r\n  getCandyMachineState,\r\n  mintOneToken,\r\n} from './candy-machine';\r\n\r\nimport {\r\n  FairLaunchAccount,\r\n  getFairLaunchState,\r\n  punchTicket,\r\n  purchaseTicket,\r\n  receiveRefund,\r\n} from './fair-launch';\r\n\r\nimport { formatNumber, getAtaForMint, toDate } from './utils';\r\nimport Countdown from 'react-countdown';\r\n\r\nconst ConnectButton = styled(WalletDialogButton)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst MintContainer = styled.div``; // add your styles here\r\n\r\nconst MintButton = styled(Button)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`; // add your styles here\r\n\r\nconst dialogStyles: any = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\nconst ValueSlider = styled(Slider)({\r\n  color: '#C0D5FE',\r\n  height: 8,\r\n  '& > *': {\r\n    height: 4,\r\n  },\r\n  '& .MuiSlider-track': {\r\n    border: 'none',\r\n    height: 4,\r\n  },\r\n  '& .MuiSlider-thumb': {\r\n    height: 24,\r\n    width: 24,\r\n    marginTop: -10,\r\n    background: 'linear-gradient(180deg, #604AE5 0%, #813EEE 100%)',\r\n    border: '2px solid currentColor',\r\n    '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\r\n      boxShadow: 'inherit',\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  '& .MuiSlider-valueLabel': {\r\n    '& > *': {\r\n      background: 'linear-gradient(180deg, #604AE5 0%, #813EEE 100%)',\r\n    },\r\n    lineHeight: 1.2,\r\n    fontSize: 12,\r\n    padding: 0,\r\n    width: 32,\r\n    height: 32,\r\n    marginLeft: 9,\r\n  },\r\n});\r\n\r\nenum Phase {\r\n  Phase0,\r\n  Phase1,\r\n  Phase2,\r\n  Lottery,\r\n  Phase3,\r\n  Phase4,\r\n  Unknown,\r\n}\r\n\r\nconst Header = (props: {\r\n  phaseName: string;\r\n  desc: string;\r\n  date: anchor.BN | undefined;\r\n  status?: string;\r\n}) => {\r\n  const { phaseName, desc, date, status } = props;\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      <Grid xs={6} justifyContent=\"center\" direction=\"column\">\r\n        <Typography variant=\"h5\" style={{ fontWeight: 600 }}>\r\n          {phaseName}\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"textSecondary\">\r\n          {desc}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid xs={6} container justifyContent=\"flex-end\">\r\n        <PhaseCountdown\r\n          date={toDate(date)}\r\n          style={{ justifyContent: 'flex-end' }}\r\n          status={status || 'COMPLETE'}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nfunction getPhase(\r\n  fairLaunch: FairLaunchAccount | undefined,\r\n  candyMachine: CandyMachineAccount | undefined,\r\n): Phase {\r\n  const curr = new Date().getTime();\r\n\r\n  const phaseOne = toDate(fairLaunch?.state.data.phaseOneStart)?.getTime();\r\n  const phaseOneEnd = toDate(fairLaunch?.state.data.phaseOneEnd)?.getTime();\r\n  const phaseTwoEnd = toDate(fairLaunch?.state.data.phaseTwoEnd)?.getTime();\r\n  const candyMachineGoLive = toDate(candyMachine?.state.goLiveDate)?.getTime();\r\n\r\n  if (phaseOne && curr < phaseOne) {\r\n    return Phase.Phase0;\r\n  } else if (phaseOneEnd && curr <= phaseOneEnd) {\r\n    return Phase.Phase1;\r\n  } else if (phaseTwoEnd && curr <= phaseTwoEnd) {\r\n    return Phase.Phase2;\r\n  } else if (!fairLaunch?.state.phaseThreeStarted) {\r\n    return Phase.Lottery;\r\n  } else if (\r\n    fairLaunch?.state.phaseThreeStarted &&\r\n    candyMachineGoLive &&\r\n    curr > candyMachineGoLive\r\n  ) {\r\n    return Phase.Phase4;\r\n  } else if (fairLaunch?.state.phaseThreeStarted) {\r\n    return Phase.Phase3;\r\n  }\r\n\r\n  return Phase.Unknown;\r\n}\r\n\r\nexport interface HomeProps {\r\n  candyMachineId?: anchor.web3.PublicKey;\r\n  fairLaunchId: anchor.web3.PublicKey;\r\n  connection: anchor.web3.Connection;\r\n  startDate: number;\r\n  txTimeout: number;\r\n}\r\n\r\nconst FAIR_LAUNCH_LOTTERY_SIZE =\r\n  8 + // discriminator\r\n  32 + // fair launch\r\n  1 + // bump\r\n  8; // size of bitmask ones\r\n\r\nconst isWinner = (\r\n  fairLaunch: FairLaunchAccount | undefined,\r\n  fairLaunchBalance: number,\r\n): boolean => {\r\n  if (fairLaunchBalance > 0) return true;\r\n  if (\r\n    !fairLaunch?.lottery.data ||\r\n    !fairLaunch?.lottery.data.length ||\r\n    !fairLaunch?.ticket.data?.seq ||\r\n    !fairLaunch?.state.phaseThreeStarted\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  const myByte =\r\n    fairLaunch.lottery.data[\r\n      FAIR_LAUNCH_LOTTERY_SIZE +\r\n        Math.floor(fairLaunch.ticket.data?.seq.toNumber() / 8)\r\n    ];\r\n\r\n  const positionFromRight = 7 - (fairLaunch.ticket.data?.seq.toNumber() % 8);\r\n  const mask = Math.pow(2, positionFromRight);\r\n  const isWinner = myByte & mask;\r\n  return isWinner > 0;\r\n};\r\n\r\nconst Home = (props: HomeProps) => {\r\n  const [fairLaunchBalance, setFairLaunchBalance] = useState<number>(0);\r\n  const [yourSOLBalance, setYourSOLBalance] = useState<number | null>(null);\r\n\r\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\r\n  const [contributed, setContributed] = useState(0);\r\n\r\n  const wallet = useWallet();\r\n\r\n  const anchorWallet = useMemo(() => {\r\n    if (\r\n      !wallet ||\r\n      !wallet.publicKey ||\r\n      !wallet.signAllTransactions ||\r\n      !wallet.signTransaction\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      publicKey: wallet.publicKey,\r\n      signAllTransactions: wallet.signAllTransactions,\r\n      signTransaction: wallet.signTransaction,\r\n    } as anchor.Wallet;\r\n  }, [wallet]);\r\n\r\n  const [alertState, setAlertState] = useState<AlertState>({\r\n    open: false,\r\n    message: '',\r\n    severity: undefined,\r\n  });\r\n\r\n  const [fairLaunch, setFairLaunch] = useState<FairLaunchAccount>();\r\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\r\n  const [howToOpen, setHowToOpen] = useState(false);\r\n  const [refundExplainerOpen, setRefundExplainerOpen] = useState(false);\r\n  const [antiRugPolicyOpen, setAnitRugPolicyOpen] = useState(false);\r\n\r\n  const onMint = async () => {\r\n    try {\r\n      setIsMinting(true);\r\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\r\n        if (\r\n          fairLaunch?.ticket.data?.state.unpunched &&\r\n          isWinner(fairLaunch, fairLaunchBalance)\r\n        ) {\r\n          await onPunchTicket();\r\n        }\r\n\r\n        const mintTxId = await mintOneToken(candyMachine, wallet.publicKey);\r\n\r\n        const status = await awaitTransactionSignatureConfirmation(\r\n          mintTxId,\r\n          props.txTimeout,\r\n          props.connection,\r\n          'singleGossip',\r\n          false,\r\n        );\r\n\r\n        if (!status?.err) {\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Congratulations! Mint succeeded!',\r\n            severity: 'success',\r\n          });\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Mint failed! Please try again!',\r\n            severity: 'error',\r\n          });\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      // TODO: blech:\r\n      let message = error.msg || 'Minting failed! Please try again!';\r\n      if (!error.msg) {\r\n        if (!error.message) {\r\n          message = 'Transaction Timeout! Please try again.';\r\n        } else if (error.message.indexOf('0x138')) {\r\n        } else if (error.message.indexOf('0x137')) {\r\n          message = `SOLD OUT!`;\r\n        } else if (error.message.indexOf('0x135')) {\r\n          message = `Insufficient funds to mint. Please fund your wallet.`;\r\n        }\r\n      } else {\r\n        if (error.code === 311) {\r\n          message = `SOLD OUT!`;\r\n          window.location.reload();\r\n        } else if (error.code === 312) {\r\n          message = `Minting period hasn't started yet.`;\r\n        }\r\n      }\r\n\r\n      setAlertState({\r\n        open: true,\r\n        message,\r\n        severity: 'error',\r\n      });\r\n    } finally {\r\n      setIsMinting(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (!anchorWallet) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const balance = await props.connection.getBalance(\r\n          anchorWallet.publicKey,\r\n        );\r\n        setYourSOLBalance(balance);\r\n\r\n        const state = await getFairLaunchState(\r\n          anchorWallet,\r\n          props.fairLaunchId,\r\n          props.connection,\r\n        );\r\n\r\n        setFairLaunch(state);\r\n\r\n        try {\r\n          if (state.state.tokenMint) {\r\n            const fairLaunchBalance =\r\n              await props.connection.getTokenAccountBalance(\r\n                (\r\n                  await getAtaForMint(\r\n                    state.state.tokenMint,\r\n                    anchorWallet.publicKey,\r\n                  )\r\n                )[0],\r\n              );\r\n\r\n            if (fairLaunchBalance.value) {\r\n              setFairLaunchBalance(fairLaunchBalance.value.uiAmount || 0);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          console.log('Problem getting fair launch token balance');\r\n          console.log(e);\r\n        }\r\n        setContributed(\r\n          (\r\n            state.state.currentMedian || state.state.data.priceRangeStart\r\n          ).toNumber() / LAMPORTS_PER_SOL,\r\n        );\r\n      } catch (e) {\r\n        console.log('Problem getting fair launch state');\r\n        console.log(e);\r\n      }\r\n      if (props.candyMachineId) {\r\n        try {\r\n          const cndy = await getCandyMachineState(\r\n            anchorWallet,\r\n            props.candyMachineId,\r\n            props.connection,\r\n          );\r\n          setCandyMachine(cndy);\r\n        } catch (e) {\r\n          console.log('Problem getting candy machine state');\r\n          console.log(e);\r\n        }\r\n      } else {\r\n        console.log('No candy machine detected in configuration.');\r\n      }\r\n    })();\r\n  }, [\r\n    anchorWallet,\r\n    props.candyMachineId,\r\n    props.connection,\r\n    props.fairLaunchId,\r\n  ]);\r\n\r\n  const min = formatNumber.asNumber(fairLaunch?.state.data.priceRangeStart);\r\n  const max = formatNumber.asNumber(fairLaunch?.state.data.priceRangeEnd);\r\n  const step = formatNumber.asNumber(fairLaunch?.state.data.tickSize);\r\n  const median = formatNumber.asNumber(fairLaunch?.state.currentMedian);\r\n  const marks = [\r\n    {\r\n      value: min || 0,\r\n      label: `${min} SOL`,\r\n    },\r\n    // TODO:L\r\n    {\r\n      value: median || 0,\r\n      label: `${median}`,\r\n    },\r\n    // display user comitted value\r\n    // {\r\n    //   value: 37,\r\n    //   label: '37°C',\r\n    // },\r\n    {\r\n      value: max || 0,\r\n      label: `${max} SOL`,\r\n    },\r\n  ].filter(_ => _ !== undefined && _.value !== 0) as any;\r\n\r\n  const onDeposit = async () => {\r\n    if (!anchorWallet) {\r\n      return;\r\n    }\r\n\r\n    console.log('deposit');\r\n    setIsMinting(true);\r\n    try {\r\n      await purchaseTicket(contributed, anchorWallet, fairLaunch);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message: `Congratulations! Bid ${\r\n          fairLaunch?.ticket.data ? 'updated' : 'inserted'\r\n        }!`,\r\n        severity: 'success',\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message: 'Something went wrong.',\r\n        severity: 'error',\r\n      });\r\n    }\r\n  };\r\n  const onRugRefund = async () => {\r\n    if (!anchorWallet) {\r\n      return;\r\n    }\r\n\r\n    console.log('refund');\r\n    try {\r\n      setIsMinting(true);\r\n      await receiveRefund(anchorWallet, fairLaunch);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message:\r\n          'Congratulations! You have received a refund. This is an irreversible action.',\r\n        severity: 'success',\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message: 'Something went wrong.',\r\n        severity: 'error',\r\n      });\r\n    }\r\n  };\r\n  const onRefundTicket = async () => {\r\n    if (!anchorWallet) {\r\n      return;\r\n    }\r\n\r\n    console.log('refund');\r\n    try {\r\n      setIsMinting(true);\r\n      await purchaseTicket(0, anchorWallet, fairLaunch);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message:\r\n          'Congratulations! Funds withdrawn. This is an irreversible action.',\r\n        severity: 'success',\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message: 'Something went wrong.',\r\n        severity: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const onPunchTicket = async () => {\r\n    if (!anchorWallet || !fairLaunch || !fairLaunch.ticket) {\r\n      return;\r\n    }\r\n\r\n    console.log('punch');\r\n    setIsMinting(true);\r\n    try {\r\n      await punchTicket(anchorWallet, fairLaunch);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message: 'Congratulations! Ticket punched!',\r\n        severity: 'success',\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message: 'Something went wrong.',\r\n        severity: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const phase = getPhase(fairLaunch, candyMachine);\r\n\r\n  const candyMachinePredatesFairLaunch =\r\n    candyMachine?.state.goLiveDate &&\r\n    fairLaunch?.state.data.phaseTwoEnd &&\r\n    candyMachine?.state.goLiveDate.lt(fairLaunch?.state.data.phaseTwoEnd);\r\n\r\n  const notEnoughSOL = !!(\r\n    yourSOLBalance != null &&\r\n    fairLaunch?.state.data.priceRangeStart &&\r\n    fairLaunch?.state.data.fee &&\r\n    yourSOLBalance + (fairLaunch?.ticket?.data?.amount.toNumber() || 0) <\r\n      contributed * LAMPORTS_PER_SOL +\r\n        fairLaunch?.state.data.fee.toNumber() +\r\n        0.01\r\n  );\r\n\r\n  return (\r\n    <Container style={{ marginTop: 100 }}>\r\n      <Container maxWidth=\"xs\" style={{ position: 'relative' }}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'flex-end',\r\n          }}\r\n        >\r\n          <Link\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            align=\"right\"\r\n            onClick={() => {\r\n              setAnitRugPolicyOpen(true);\r\n            }}\r\n          >\r\n            Anti-Rug Policy\r\n          </Link>\r\n        </div>\r\n      </Container>\r\n      <Container maxWidth=\"xs\" style={{ position: 'relative' }}>\r\n        <Paper\r\n          style={{ padding: 24, backgroundColor: '#151A1F', borderRadius: 6 }}\r\n        >\r\n          <Grid container justifyContent=\"center\" direction=\"column\">\r\n            {phase === Phase.Phase0 && (\r\n              <Header\r\n                phaseName={'Phase 0'}\r\n                desc={'Anticipation Phase'}\r\n                date={fairLaunch?.state.data.phaseOneStart}\r\n              />\r\n            )}\r\n            {phase === Phase.Phase1 && (\r\n              <Header\r\n                phaseName={'Phase 1'}\r\n                desc={'Set price phase'}\r\n                date={fairLaunch?.state.data.phaseOneEnd}\r\n              />\r\n            )}\r\n\r\n            {phase === Phase.Phase2 && (\r\n              <Header\r\n                phaseName={'Phase 2'}\r\n                desc={'Grace period'}\r\n                date={fairLaunch?.state.data.phaseTwoEnd}\r\n              />\r\n            )}\r\n\r\n            {phase === Phase.Lottery && (\r\n              <Header\r\n                phaseName={'Phase 3'}\r\n                desc={'Raffle in progress'}\r\n                date={fairLaunch?.state.data.phaseTwoEnd.add(\r\n                  fairLaunch?.state.data.lotteryDuration,\r\n                )}\r\n              />\r\n            )}\r\n\r\n            {phase === Phase.Phase3 && !candyMachine && (\r\n              <Header\r\n                phaseName={'Phase 3'}\r\n                desc={'Raffle finished!'}\r\n                date={fairLaunch?.state.data.phaseTwoEnd}\r\n              />\r\n            )}\r\n\r\n            {phase === Phase.Phase3 && candyMachine && (\r\n              <Header\r\n                phaseName={'Phase 3'}\r\n                desc={'Minting starts in...'}\r\n                date={candyMachine?.state.goLiveDate}\r\n              />\r\n            )}\r\n\r\n            {phase === Phase.Phase4 && (\r\n              <Header\r\n                phaseName={\r\n                  candyMachinePredatesFairLaunch ? 'Phase 3' : 'Phase 4'\r\n                }\r\n                desc={'Candy Time 🍬 🍬 🍬'}\r\n                date={candyMachine?.state.goLiveDate}\r\n                status=\"LIVE\"\r\n              />\r\n            )}\r\n\r\n            {fairLaunch && (\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                style={{\r\n                  height: 200,\r\n                  marginTop: 20,\r\n                  marginBottom: 20,\r\n                  background: '#384457',\r\n                  borderRadius: 6,\r\n                }}\r\n              >\r\n                {fairLaunch.ticket.data ? (\r\n                  <>\r\n                    <Typography>Your bid</Typography>\r\n                    <Typography variant=\"h6\" style={{ fontWeight: 900 }}>\r\n                      {formatNumber.format(\r\n                        (fairLaunch?.ticket.data?.amount.toNumber() || 0) /\r\n                          LAMPORTS_PER_SOL,\r\n                      )}{' '}\r\n                      SOL\r\n                    </Typography>\r\n                  </>\r\n                ) : [Phase.Phase0, Phase.Phase1].includes(phase) ? (\r\n                  <Typography>\r\n                    You haven't entered this raffle yet. <br />\r\n                    {fairLaunch?.state?.data?.fee && (\r\n                      <span>\r\n                        <b>\r\n                          All initial bids will incur a ◎{' '}\r\n                          {fairLaunch?.state?.data?.fee.toNumber() /\r\n                            LAMPORTS_PER_SOL}{' '}\r\n                          fee.\r\n                        </b>\r\n                      </span>\r\n                    )}\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography>\r\n                    You didn't participate in this raffle.\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n            )}\r\n\r\n            {fairLaunch && (\r\n              <>\r\n                {[\r\n                  Phase.Phase1,\r\n                  Phase.Phase2,\r\n                  Phase.Phase3,\r\n                  Phase.Lottery,\r\n                ].includes(phase) &&\r\n                  fairLaunch?.ticket?.data?.state.withdrawn && (\r\n                    <div style={{ paddingTop: '15px' }}>\r\n                      <Alert severity=\"error\">\r\n                        Your bid was withdrawn and cannot be adjusted or\r\n                        re-inserted.\r\n                      </Alert>\r\n                    </div>\r\n                  )}\r\n                {[Phase.Phase1, Phase.Phase2].includes(phase) &&\r\n                  fairLaunch.state.currentMedian &&\r\n                  fairLaunch?.ticket?.data?.amount &&\r\n                  !fairLaunch?.ticket?.data?.state.withdrawn &&\r\n                  fairLaunch.state.currentMedian.gt(\r\n                    fairLaunch?.ticket?.data?.amount,\r\n                  ) && (\r\n                    <div style={{ paddingTop: '15px' }}>\r\n                      <Alert severity=\"warning\">\r\n                        Your bid is currently below the median and will not be\r\n                        eligible for the raffle.\r\n                      </Alert>\r\n                    </div>\r\n                  )}\r\n                {[Phase.Phase3, Phase.Lottery].includes(phase) &&\r\n                  fairLaunch.state.currentMedian &&\r\n                  fairLaunch?.ticket?.data?.amount &&\r\n                  !fairLaunch?.ticket?.data?.state.withdrawn &&\r\n                  fairLaunch.state.currentMedian.gt(\r\n                    fairLaunch?.ticket?.data?.amount,\r\n                  ) && (\r\n                    <div style={{ paddingTop: '15px' }}>\r\n                      <Alert severity=\"error\">\r\n                        Your bid was below the median and was not included in\r\n                        the raffle. You may click <em>Withdraw</em> when the\r\n                        raffle ends or you will be automatically issued one when\r\n                        the Fair Launch authority withdraws from the treasury.\r\n                      </Alert>\r\n                    </div>\r\n                  )}\r\n                {notEnoughSOL && (\r\n                  <Alert severity=\"error\">\r\n                    You do not have enough SOL in your account to place this\r\n                    bid.\r\n                  </Alert>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {[Phase.Phase1, Phase.Phase2].includes(phase) && (\r\n              <>\r\n                <Grid style={{ marginTop: 40, marginBottom: 20 }}>\r\n                  <ValueSlider\r\n                    min={min}\r\n                    marks={marks}\r\n                    max={max}\r\n                    step={step}\r\n                    value={contributed}\r\n                    onChange={(ev, val) => setContributed(val as any)}\r\n                    valueLabelDisplay=\"auto\"\r\n                    style={{\r\n                      width: 'calc(100% - 40px)',\r\n                      marginLeft: 20,\r\n                      height: 30,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </>\r\n            )}\r\n\r\n            {!wallet.connected ? (\r\n              <ConnectButton>\r\n                Connect{' '}\r\n                {[Phase.Phase1].includes(phase) ? 'to bid' : 'to see status'}\r\n              </ConnectButton>\r\n            ) : (\r\n              <div>\r\n                {[Phase.Phase1, Phase.Phase2].includes(phase) && (\r\n                  <>\r\n                    <MintButton\r\n                      onClick={onDeposit}\r\n                      variant=\"contained\"\r\n                      disabled={\r\n                        isMinting ||\r\n                        (!fairLaunch?.ticket.data && phase === Phase.Phase2) ||\r\n                        notEnoughSOL\r\n                      }\r\n                    >\r\n                      {isMinting ? (\r\n                        <CircularProgress />\r\n                      ) : !fairLaunch?.ticket.data ? (\r\n                        'Place bid'\r\n                      ) : (\r\n                        'Change bid'\r\n                      )}\r\n                      {}\r\n                    </MintButton>\r\n                  </>\r\n                )}\r\n\r\n                {[Phase.Phase3].includes(phase) && (\r\n                  <>\r\n                    {isWinner(fairLaunch, fairLaunchBalance) && (\r\n                      <MintButton\r\n                        onClick={onPunchTicket}\r\n                        variant=\"contained\"\r\n                        disabled={\r\n                          fairLaunch?.ticket.data?.state.punched !== undefined\r\n                        }\r\n                      >\r\n                        {isMinting ? <CircularProgress /> : 'Punch Ticket'}\r\n                      </MintButton>\r\n                    )}\r\n\r\n                    {!isWinner(fairLaunch, fairLaunchBalance) && (\r\n                      <MintButton\r\n                        onClick={onRefundTicket}\r\n                        variant=\"contained\"\r\n                        disabled={\r\n                          isMinting ||\r\n                          fairLaunch?.ticket.data === undefined ||\r\n                          fairLaunch?.ticket.data?.state.withdrawn !== undefined\r\n                        }\r\n                      >\r\n                        {isMinting ? <CircularProgress /> : 'Withdraw'}\r\n                      </MintButton>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                {phase === Phase.Phase4 && (\r\n                  <>\r\n                    {(!fairLaunch ||\r\n                      isWinner(fairLaunch, fairLaunchBalance)) && (\r\n                      <MintContainer>\r\n                        <MintButton\r\n                          disabled={\r\n                            candyMachine?.state.isSoldOut ||\r\n                            isMinting ||\r\n                            !candyMachine?.state.isActive ||\r\n                            (fairLaunch?.ticket?.data?.state.punched &&\r\n                              fairLaunchBalance === 0)\r\n                          }\r\n                          onClick={onMint}\r\n                          variant=\"contained\"\r\n                        >\r\n                          {fairLaunch?.ticket?.data?.state.punched &&\r\n                          fairLaunchBalance === 0 ? (\r\n                            'MINTED'\r\n                          ) : candyMachine?.state.isSoldOut ? (\r\n                            'SOLD OUT'\r\n                          ) : isMinting ? (\r\n                            <CircularProgress />\r\n                          ) : (\r\n                            'MINT'\r\n                          )}\r\n                        </MintButton>\r\n                      </MintContainer>\r\n                    )}\r\n\r\n                    {!isWinner(fairLaunch, fairLaunchBalance) && (\r\n                      <MintButton\r\n                        onClick={onRefundTicket}\r\n                        variant=\"contained\"\r\n                        disabled={\r\n                          isMinting ||\r\n                          fairLaunch?.ticket.data === undefined ||\r\n                          fairLaunch?.ticket.data?.state.withdrawn !== undefined\r\n                        }\r\n                      >\r\n                        {isMinting ? <CircularProgress /> : 'Withdraw'}\r\n                      </MintButton>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-between\"\r\n              color=\"textSecondary\"\r\n            >\r\n              <Link\r\n                component=\"button\"\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                align=\"left\"\r\n                onClick={() => {\r\n                  setHowToOpen(true);\r\n                }}\r\n              >\r\n                How this raffle works\r\n              </Link>\r\n              {fairLaunch?.ticket.data && (\r\n                <Link\r\n                  component=\"button\"\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                  align=\"right\"\r\n                  onClick={() => {\r\n                    if (\r\n                      !fairLaunch ||\r\n                      phase === Phase.Lottery ||\r\n                      isWinner(fairLaunch, fairLaunchBalance)\r\n                    ) {\r\n                      setRefundExplainerOpen(true);\r\n                    } else {\r\n                      onRefundTicket();\r\n                    }\r\n                  }}\r\n                >\r\n                  Withdraw funds\r\n                </Link>\r\n              )}\r\n            </Grid>\r\n            <Dialog\r\n              open={refundExplainerOpen}\r\n              onClose={() => setRefundExplainerOpen(false)}\r\n              PaperProps={{\r\n                style: { backgroundColor: '#222933', borderRadius: 6 },\r\n              }}\r\n            >\r\n              <MuiDialogContent style={{ padding: 24 }}>\r\n                During raffle phases, or if you are a winner, or if this website\r\n                is not configured to be a fair launch but simply a candy\r\n                machine, refunds are disallowed.\r\n              </MuiDialogContent>\r\n            </Dialog>\r\n            <Dialog\r\n              open={antiRugPolicyOpen}\r\n              onClose={() => {\r\n                setAnitRugPolicyOpen(false);\r\n              }}\r\n              PaperProps={{\r\n                style: { backgroundColor: '#222933', borderRadius: 6 },\r\n              }}\r\n            >\r\n              <MuiDialogContent style={{ padding: 24 }}>\r\n                {!fairLaunch?.state.data.antiRugSetting && (\r\n                  <span>This Fair Launch has no anti-rug settings.</span>\r\n                )}\r\n                {fairLaunch?.state.data.antiRugSetting &&\r\n                  fairLaunch.state.data.antiRugSetting.selfDestructDate && (\r\n                    <div>\r\n                      <h3>Anti-Rug Policy</h3>\r\n                      <p>\r\n                        This raffle is governed by a smart contract to prevent\r\n                        the artist from running away with your money.\r\n                      </p>\r\n                      <p>How it works:</p>\r\n                      This project will retain{' '}\r\n                      {fairLaunch.state.data.antiRugSetting.reserveBp / 100}% (◎{' '}\r\n                      {(fairLaunch?.treasury *\r\n                        fairLaunch.state.data.antiRugSetting.reserveBp) /\r\n                        (LAMPORTS_PER_SOL * 10000)}\r\n                      ) of the pledged amount in a locked state until all but{' '}\r\n                      {fairLaunch.state.data.antiRugSetting.tokenRequirement.toNumber()}{' '}\r\n                      NFTs (out of up to{' '}\r\n                      {fairLaunch.state.data.numberOfTokens.toNumber()}) have\r\n                      been minted.\r\n                      <p>\r\n                        If more than{' '}\r\n                        {fairLaunch.state.data.antiRugSetting.tokenRequirement.toNumber()}{' '}\r\n                        NFTs remain as of{' '}\r\n                        {toDate(\r\n                          fairLaunch.state.data.antiRugSetting.selfDestructDate,\r\n                        )?.toLocaleDateString()}{' '}\r\n                        at{' '}\r\n                        {toDate(\r\n                          fairLaunch.state.data.antiRugSetting.selfDestructDate,\r\n                        )?.toLocaleTimeString()}\r\n                        , you will have the option to get a refund of{' '}\r\n                        {fairLaunch.state.data.antiRugSetting.reserveBp / 100}%\r\n                        of the cost of your token.\r\n                      </p>\r\n                      {fairLaunch?.ticket?.data &&\r\n                        !fairLaunch?.ticket?.data.state.withdrawn && (\r\n                          <MintButton\r\n                            onClick={onRugRefund}\r\n                            variant=\"contained\"\r\n                            disabled={\r\n                              !!!fairLaunch.ticket.data ||\r\n                              !fairLaunch.ticket.data.state.punched ||\r\n                              Date.now() / 1000 <\r\n                                fairLaunch.state.data.antiRugSetting.selfDestructDate.toNumber()\r\n                            }\r\n                          >\r\n                            {isMinting ? (\r\n                              <CircularProgress />\r\n                            ) : Date.now() / 1000 <\r\n                              fairLaunch.state.data.antiRugSetting.selfDestructDate.toNumber() ? (\r\n                              <span>\r\n                                Refund in...\r\n                                <Countdown\r\n                                  date={toDate(\r\n                                    fairLaunch.state.data.antiRugSetting\r\n                                      .selfDestructDate,\r\n                                  )}\r\n                                />\r\n                              </span>\r\n                            ) : (\r\n                              'Refund'\r\n                            )}\r\n                            {}\r\n                          </MintButton>\r\n                        )}\r\n                      <div style={{ textAlign: 'center', marginTop: '-5px' }}>\r\n                        {fairLaunch?.ticket?.data &&\r\n                          !fairLaunch?.ticket?.data?.state.punched && (\r\n                            <small>\r\n                              You currently have a ticket but it has not been\r\n                              punched yet, so cannot be refunded.\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n              </MuiDialogContent>\r\n            </Dialog>\r\n            <Dialog\r\n              open={howToOpen}\r\n              onClose={() => setHowToOpen(false)}\r\n              PaperProps={{\r\n                style: { backgroundColor: '#222933', borderRadius: 6 },\r\n              }}\r\n            >\r\n              <MuiDialogTitle\r\n                disableTypography\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'space-between',\r\n                }}\r\n              >\r\n                <Link\r\n                  component=\"button\"\r\n                  variant=\"h6\"\r\n                  color=\"textSecondary\"\r\n                  onClick={() => {\r\n                    setHowToOpen(true);\r\n                  }}\r\n                >\r\n                  How it works\r\n                </Link>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  className={dialogStyles.closeButton}\r\n                  onClick={() => setHowToOpen(false)}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </MuiDialogTitle>\r\n              <MuiDialogContent>\r\n                <Typography variant=\"h6\">\r\n                  Phase 1 - Set the fair price:\r\n                </Typography>\r\n                <Typography gutterBottom color=\"textSecondary\">\r\n                  Enter a bid in the range provided by the artist. The median of\r\n                  all bids will be the \"fair\" price of the raffle ticket.{' '}\r\n                  {fairLaunch?.state?.data?.fee && (\r\n                    <span>\r\n                      <b>\r\n                        All bids will incur a ◎{' '}\r\n                        {fairLaunch?.state?.data?.fee.toNumber() /\r\n                          LAMPORTS_PER_SOL}{' '}\r\n                        fee.\r\n                      </b>\r\n                    </span>\r\n                  )}\r\n                </Typography>\r\n                <Typography variant=\"h6\">Phase 2 - Grace period:</Typography>\r\n                <Typography gutterBottom color=\"textSecondary\">\r\n                  If your bid was at or above the fair price, you automatically\r\n                  get a raffle ticket at that price. There's nothing else you\r\n                  need to do. Your excess SOL will be returned to you when the\r\n                  Fair Launch authority withdraws from the treasury. If your bid\r\n                  is below the median price, you can still opt in at the fair\r\n                  price during this phase.\r\n                </Typography>\r\n                {candyMachinePredatesFairLaunch ? (\r\n                  <>\r\n                    <Typography variant=\"h6\">\r\n                      Phase 3 - The Candy Machine:\r\n                    </Typography>\r\n                    <Typography gutterBottom color=\"textSecondary\">\r\n                      Everyone who got a raffle ticket at the fair price is\r\n                      entered to win an NFT. If you win an NFT, congrats. If you\r\n                      don’t, no worries, your SOL will go right back into your\r\n                      wallet.\r\n                    </Typography>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Typography variant=\"h6\">Phase 3 - The Lottery:</Typography>\r\n                    <Typography gutterBottom color=\"textSecondary\">\r\n                      Everyone who got a raffle ticket at the fair price is\r\n                      entered to win a Fair Launch Token that entitles them to\r\n                      an NFT at a later date using a Candy Machine here. If you\r\n                      don’t win, no worries, your SOL will go right back into\r\n                      your wallet.\r\n                    </Typography>\r\n                    <Typography variant=\"h6\">\r\n                      Phase 4 - The Candy Machine:\r\n                    </Typography>\r\n                    <Typography gutterBottom color=\"textSecondary\">\r\n                      On{' '}\r\n                      {candyMachine?.state.goLiveDate\r\n                        ? toDate(\r\n                            candyMachine?.state.goLiveDate,\r\n                          )?.toLocaleString()\r\n                        : ' some later date'}\r\n                      , you will be able to exchange your Fair Launch token for\r\n                      an NFT using the Candy Machine at this site by pressing\r\n                      the Mint Button.\r\n                    </Typography>\r\n                  </>\r\n                )}\r\n              </MuiDialogContent>\r\n            </Dialog>\r\n\r\n            {/* {wallet.connected && (\r\n              <p>\r\n                Address: {shortenAddress(wallet.publicKey?.toBase58() || '')}\r\n              </p>\r\n            )}\r\n\r\n            {wallet.connected && (\r\n              <p>Balance: {(balance || 0).toLocaleString()} SOL</p>\r\n            )} */}\r\n          </Grid>\r\n        </Paper>\r\n      </Container>\r\n\r\n      {fairLaunch && (\r\n        <Container\r\n          maxWidth=\"xs\"\r\n          style={{ position: 'relative', marginTop: 10 }}\r\n        >\r\n          <div style={{ margin: 20 }}>\r\n            <Grid container direction=\"row\" wrap=\"nowrap\">\r\n              <Grid container md={4} direction=\"column\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  Bids\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  color=\"textPrimary\"\r\n                  style={{ fontWeight: 'bold' }}\r\n                >\r\n                  {fairLaunch?.state.numberTicketsSold.toNumber() || 0}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid container md={4} direction=\"column\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  Median bid\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  color=\"textPrimary\"\r\n                  style={{ fontWeight: 'bold' }}\r\n                >\r\n                  ◎ {formatNumber.format(median)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid container md={4} direction=\"column\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  Total raised\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  color=\"textPrimary\"\r\n                  style={{ fontWeight: 'bold' }}\r\n                >\r\n                  ◎{' '}\r\n                  {formatNumber.format(\r\n                    (fairLaunch?.treasury || 0) / LAMPORTS_PER_SOL,\r\n                  )}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Container>\r\n      )}\r\n      <Snackbar\r\n        open={alertState.open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setAlertState({ ...alertState, open: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setAlertState({ ...alertState, open: false })}\r\n          severity={alertState.severity}\r\n        >\r\n          {alertState.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\ninterface AlertState {\r\n  open: boolean;\r\n  message: string;\r\n  severity: 'success' | 'info' | 'warning' | 'error' | undefined;\r\n}\r\n\r\nexport default Home;\r\n","import { Paper } from '@material-ui/core';\r\nimport Countdown from 'react-countdown';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      padding: theme.spacing(0),\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n        marginRight: 0,\r\n        width: theme.spacing(6),\r\n        height: theme.spacing(6),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        background: '#384457',\r\n        color: 'white',\r\n        borderRadius: 5,\r\n        fontSize: 10,\r\n      },\r\n    },\r\n    done: {\r\n      display: 'flex',\r\n      margin: theme.spacing(1),\r\n      marginRight: 0,\r\n      padding: theme.spacing(1),\r\n      flexDirection: 'column',\r\n      alignContent: 'center',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      background: '#384457',\r\n      color: 'white',\r\n      borderRadius: 5,\r\n      fontWeight: 'bold',\r\n      fontSize: 18,\r\n    },\r\n    item: {\r\n      fontWeight: 'bold',\r\n      fontSize: 18,\r\n    }\r\n  }),\r\n);\r\n\r\n\r\ninterface PhaseCountdownProps {\r\n  date: Date | undefined;\r\n  style?: React.CSSProperties;\r\n  status?: string;\r\n  onComplete?: () => void;\r\n  start?: Date;\r\n  end?: Date;\r\n}\r\n\r\ninterface CountdownRender {\r\n  days: number;\r\n  hours: number;\r\n  minutes: number;\r\n  seconds: number;\r\n  completed: boolean;\r\n}\r\n\r\nexport const PhaseCountdown: React.FC<PhaseCountdownProps> = ({\r\n  date,\r\n  status,\r\n  style,\r\n  start,\r\n  end,\r\n  onComplete,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [isFixed, setIsFixed] = useState(start && end && date ? start.getTime() - Date.now() < 0 : false);\r\n\r\n  const renderCountdown = ({ days, hours, minutes, seconds, completed }: CountdownRender) => {\r\n    hours += days * 24\r\n    if (completed) {\r\n      return status ? <span className={classes.done}  >{status}</span> : null;\r\n    } else {\r\n      return (\r\n        <div className={classes.root} style={style} >\r\n          {isFixed && <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              +\r\n            </span>\r\n          </Paper>}\r\n          <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              {hours < 10 ? `0${hours}` : hours}\r\n            </span>\r\n            <span>hrs</span>\r\n          </Paper>\r\n          <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              {minutes < 10 ? `0${minutes}` : minutes}\r\n            </span>\r\n            <span>mins</span>\r\n          </Paper>\r\n          <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              {seconds < 10 ? `0${seconds}` : seconds}\r\n            </span>\r\n            <span>secs</span>\r\n          </Paper>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  if (date && start && end) {\r\n    if (isFixed) {\r\n      <Countdown\r\n        date={start}\r\n        now={() => end.getTime()}\r\n        onComplete={() => setIsFixed(false)}\r\n        renderer={renderCountdown}\r\n      />\r\n    }\r\n  }\r\n\r\n  if (date) {\r\n    return (\r\n      <Countdown\r\n        date={date}\r\n        onComplete={onComplete}\r\n        renderer={renderCountdown}\r\n      />\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import React, { useContext, useEffect, useMemo, useRef } from 'react';\r\nimport confetti from 'canvas-confetti';\r\n\r\nexport interface ConfettiContextState {\r\n  dropConfetti: () => void;\r\n}\r\n\r\nconst ConfettiContext = React.createContext<ConfettiContextState | null>(null);\r\n\r\nexport const ConfettiProvider = ({ children = null as any }) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>();\r\n  const confettiRef = useRef<confetti.CreateTypes>();\r\n\r\n  const dropConfetti = useMemo(\r\n    () => () => {\r\n      if (confettiRef.current && canvasRef.current) {\r\n        canvasRef.current.style.visibility = 'visible';\r\n        confettiRef\r\n          .current({\r\n            particleCount: 400,\r\n            spread: 160,\r\n            origin: { y: 0.3 },\r\n          })\r\n          ?.finally(() => {\r\n            if (canvasRef.current) {\r\n              canvasRef.current.style.visibility = 'hidden';\r\n            }\r\n          });\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (canvasRef.current && !confettiRef.current) {\r\n      canvasRef.current.style.visibility = 'hidden';\r\n      confettiRef.current = confetti.create(canvasRef.current, {\r\n        resize: true,\r\n        useWorker: true,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const canvasStyle: React.CSSProperties = {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: 0,\r\n    left: 0,\r\n  };\r\n\r\n  return (\r\n    <ConfettiContext.Provider value={{ dropConfetti }}>\r\n      <canvas ref={canvasRef as any} style={canvasStyle} />\r\n      {children}\r\n    </ConfettiContext.Provider>\r\n  );\r\n};\r\n\r\nexport const Confetti = () => {\r\n  const { dropConfetti } = useConfetti();\r\n\r\n  useEffect(() => {\r\n    dropConfetti();\r\n  }, [dropConfetti]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport const useConfetti = () => {\r\n  const context = useContext(ConfettiContext);\r\n  return context as ConfettiContextState;\r\n};\r\n","import './App.css';\r\nimport { useMemo } from 'react';\r\n\r\nimport Home from './Home';\r\n\r\nimport * as anchor from '@project-serum/anchor';\r\nimport { clusterApiUrl } from '@solana/web3.js';\r\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\r\nimport {\r\n  getPhantomWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n} from '@solana/wallet-adapter-wallets';\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from '@solana/wallet-adapter-react';\r\n\r\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\r\nimport { ThemeProvider, createTheme } from '@material-ui/core';\r\nimport { ConfettiProvider } from './confetti';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nconst candyMachineId = process.env.REACT_APP_CANDY_MACHINE_ID\r\n  ? new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID)\r\n  : undefined;\r\n\r\nconst fairLaunchId = new anchor.web3.PublicKey(\r\n  process.env.REACT_APP_FAIR_LAUNCH_ID!,\r\n);\r\n\r\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\r\n\r\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\r\nconst connection = new anchor.web3.Connection(rpcHost);\r\n\r\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\r\n\r\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\r\n\r\nconst App = () => {\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n\r\n  const wallets = useMemo(\r\n    () => [getPhantomWallet(), getSolflareWallet(), getSolletWallet()],\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ConnectionProvider endpoint={endpoint}>\r\n        <WalletProvider wallets={wallets} autoConnect>\r\n          <WalletDialogProvider>\r\n            <ConfettiProvider>\r\n              <Home\r\n                candyMachineId={candyMachineId}\r\n                fairLaunchId={fairLaunchId}\r\n                connection={connection}\r\n                startDate={startDateSeed}\r\n                txTimeout={txTimeout}\r\n              />\r\n            </ConfettiProvider>\r\n          </WalletDialogProvider>\r\n        </WalletProvider>\r\n      </ConnectionProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}